
# 2020-11-23 10:03:38.901308
+SELECT * FROM answers;

# 2020-11-23 10:03:50.571603
+SELECT * FROM copilot_conversations;

# 2020-11-23 10:04:09.807441
+SELECT COUNT from public,

# 2020-11-23 10:04:12.393839
+SELECT COUNT from public;

# 2020-11-23 13:15:58.690756
+SELECT COUNT(*) FROM question_feed;

# 2020-11-23 13:16:06.216518
+SELECT * FROM question_feed;

# 2020-11-23 13:33:20.407686
+SELECT count(*) FROM question_feed;

# 2020-11-23 16:15:35.244677
+SELECT * FROM question_log;

# 2020-11-23 16:15:50.856460
+\dt question_log

# 2020-11-23 16:15:53.185286
+\d question_log

# 2020-11-23 16:16:20.473688
+UPDATE question_log SET question_id = 1 WHERE id = 1;

# 2020-11-23 16:16:26.872356
+UPDATE question_log SET question_id = NULL WHERE id = 1;

# 2020-11-23 16:19:32.260586
+UPDATE question_log SET question_id = 5052 WHERE id = 1;

# 2020-11-23 16:19:39.466594
+SELECT * FROM question_log WHERE id = 1;

# 2020-11-23 16:20:02.072579
+SELECT * FROM question_log WHERE id = 2;

# 2020-11-23 16:20:16.797457
+SELECT * FROM question_log WHERE id = 1;

# 2020-11-23 16:23:39.032666
+CREATE INDEX proba ON question_log(question_id);

# 2020-11-23 16:23:46.602975
+\d question_log

# 2020-11-23 16:25:55.269776
+DROP INDEX proba;

# 2020-11-23 16:26:05.101443
+\d question_log

# 2020-11-23 16:26:15.904316
+DELETE FROM copilot_users;

# 2020-11-25 17:07:01.774815
+SELECT count(*) FROM question_feed;

# 2020-11-25 17:07:13.827448
+\dt

# 2020-11-25 17:07:18.637335
+SELECT count(*) FROM question_log;

# 2020-11-25 17:09:03.489217
+SELECT count(*) FROM sessions;

# 2020-11-25 17:10:05.759642
+SELECT count(*) FROM question_log;

# 2020-11-26 11:55:36.739869
+SELECT * FROM question_log;

# 2020-11-26 11:57:58.346679
+CREATE DATABASE account-content;

# 2020-11-26 11:58:04.201127
+CREATE DATABASE 'account-content';

# 2020-11-26 11:58:15.516039
+CREATE DATABASE "account-content";

# 2020-11-26 11:58:30.759832
+create user amcm with encrypted password '9454m5jd5FgzCobrWd5My7a22JWLfrGN';

# 2020-11-26 11:58:39.908117
+grant all privileges on database "account-content" to amcm;

# 2020-11-26 11:59:15.100069
+SELECT name, context
+FROM pg_settings
+WHERE name ilike '%log%';

# 2020-11-26 11:59:42.715855
+SELECT name, context
+FROM pg_settings
+WHERE name ilike '%query%';

# 2020-11-26 12:13:57.876559
+SELECT * FROM public;

# 2020-11-26 12:14:01.811711
+\d

# 2020-11-26 12:14:03.547421
+\dt

# 2020-11-26 12:14:15.907721
+SELECT * FROM information_schema.user_defined_types;

# 2020-11-26 12:14:31.958008
+SELECT * FROM information_schema.enabled_roles;

# 2020-11-26 12:15:37.293588
+ALTER DATABASE "account-content" OWNER TO amcm;

# 2020-11-26 12:16:26.959945
+grant postgres amcm

# 2020-11-26 12:16:28.255198
+grant postgres amcm;

# 2020-11-26 12:16:57.695920
+GRANT amcm to postgres;

# 2020-11-26 12:17:04.199127
+GRANT amcm to root;

# 2020-11-26 12:17:46.635860
+GRANT amcm TO root;

# 2020-11-26 12:18:00.995290
+GRANT amcm to postgres;

# 2020-11-26 12:18:09.697589
+GRANT amcm to azure_pg_admin;

# 2020-11-26 12:18:14.453423
+ALTER DATABASE "account-content" OWNER TO amcm;

# 2020-11-26 12:21:25.570027
+CREATE EXTENSION IF NOT EXISTS pg_trgm;

# 2020-11-26 12:58:01.577203
+explain analyze SELECT * FROM answers WHERE knowledge_base_id = 1;

# 2020-11-26 12:58:13.579577
+explain analyze SELECT * FROM answers WHERE knowledge_base_id = 2;

# 2020-11-26 12:59:05.791120
+explain analyze SELECT * FROM answers WHERE type = "short_form";

# 2020-11-26 12:59:10.186131
+explain analyze SELECT * FROM answers WHERE type = 'short_form';

# 2020-11-26 12:59:14.900858
+explain analyze SELECT * FROM answers WHERE type = 'long_form';

# 2020-11-26 13:02:07.124074
+explain analyze SELECT * FROM answers WHERE type = 'short_form';

# 2020-11-26 13:02:09.039532
+explain analyze SELECT * FROM answers WHERE type = 'long_form';

# 2020-11-26 13:02:10.418276
+explain analyze SELECT * FROM answers WHERE type = 'short_form';

# 2020-11-26 13:19:51.857567
+explain analyze SELECT * FROM instances;

# 2020-11-26 17:28:21.962588
+SELECT count(*) FROM question_log WHERE accepted_answer_ids @> ARRAY[answer_ids[1]];

# 2020-11-26 17:28:39.413260
+SELECT count(*) FROM question_log WHERE accepted_answer_ids @> ARRAY[answer_ids[1]] AND handoff_channel NOT NULL;

# 2020-11-26 17:28:43.339747
+SELECT count(*) FROM question_log WHERE accepted_answer_ids @> ARRAY[answer_ids[1]] AND handoff_channel IS NOT NULL;

# 2020-11-26 17:28:53.252832
+SELECT * FROM question_log WHERE accepted_answer_ids @> ARRAY[answer_ids[1]] AND handoff_channel IS NOT NULL;

# 2020-11-26 17:31:07.897994
+SELECT * FROM question_log WHERE accepted_answer_ids @> ARRAY[answer_ids[1]] AND handoff_channel IS NOT NULL AND source = 'user';

# 2020-11-26 17:32:01.949187
+SELECT * FROM question_log WHERE accepted_answer_ids @> ARRAY[answer_ids[1]] AND handoff_channel IS NOT NULL;

# 2020-11-26 17:33:26.103589
+SELECT * FROM question_log WHERE accepted_answer_ids @> ARRAY[answer_ids[1]] AND handoff_channel IS NOT NULL AND answer_ids[1] = 4874;

# 2020-11-26 17:36:32.996233
+SELECT * FROM instances WHERE knowledge_base_id = 4;

# 2020-11-26 17:36:36.980574
+SELECT * FROM instances WHERE knowledge_base_id = 5;

# 2020-11-26 17:38:10.361965
+SELECT * FROM events WHERE instance_name = 'novasol-autopilot-1' AND timestamp > '2020-08-11 09:25:07.728' AND timestamp < '2020-08-11 09:27:07.728'

# 2020-11-26 17:38:30.055853
+SELECT name, timestamp, session_id FROM events WHERE instance_name = 'novasol-autopilot-1' AND timestamp > '2020-08-11 09:25:07.728' AND timestamp < '2020-08-11 09:27:07.728'

# 2020-11-26 17:39:01.566865
+SELECT name FROM events WHERE session_id = '3a915959-3c8a-4a70-a884-d06210ba1f55' AND instance_name = 'novasol-autopilot-1';

# 2020-11-26 17:39:08.532060
+SELECT name, timestamp FROM events WHERE session_id = '3a915959-3c8a-4a70-a884-d06210ba1f55' AND instance_name = 'novasol-autopilot-1';

# 2020-11-26 17:39:25.142697
+SELECT name, timestamp FROM events WHERE session_id = '3a915959-3c8a-4a70-a884-d06210ba1f55' AND instance_name = 'novasol-autopilot-1' ORDER BY timestamp;

# 2020-11-26 17:39:56.304910
+SELECT name, timestamp FROM events WHERE session_id = '3a915959-3c8a-4a70-a884-d06210ba1f55' AND instance_name = 'novasol-autopilot-1' AND name = 'autopilot.reject' ORDER BY timestamp;

# 2020-11-27 11:27:00.850475
+SELECT * FROM integrations;

# 2020-11-27 12:35:15.006306
+SELECT * FROM users;

# 2020-11-27 13:17:32.628917
+\d integrations

# 2020-11-27 13:17:36.922768
+\d instances

# 2020-11-30 13:50:16.338969
+SELECT * FROM copilot_conversations;

# 2020-11-30 13:50:21.310099
+SELECT * FROM copilot_answers;

# 2020-11-30 14:08:36.903035
+TRUNCATE events;

# 2020-11-30 14:08:45.521259
+SELECT * FROM events;

# 2020-12-01 16:25:38.565070
+SELECT count(*) FROM question_log;

# 2020-12-01 16:25:56.787867
+SELECT count(distinct(timestamp)) FROM question_log;

# 2020-12-01 16:28:06.948604
+select * from question_log ou
+where (select count(*) from question_log inr
+where inr.timestamp = ou.timestamp) > 1
+

# 2020-12-01 16:28:20.358873
+select * from question_log ou
+where (select count(*) from question_log inr
+where inr.timestamp = ou.timestamp) > 1;

# 2020-12-01 16:30:52.701376
+SELECT count(distinct(timestamp)) FROM question_log;

# 2020-12-01 16:31:01.180919
+SELECT count(timestamp) FROM question_log;

# 2020-12-01 16:32:07.419740
+select timestamp, count(*)
+from question_log
+group by timestamp
+HAVING count(*) > 1;

# 2020-12-01 16:32:24.257850
+SELECT * FROM question_log WHERE timestamp = '2020-10-27 09:11:26.527';

# 2020-12-01 16:33:16.312256
+SELECT question FROM question_log WHERE timestamp = '2020-10-27 09:11:26.527';

# 2020-12-01 16:33:23.856807
+SELECT * FROM question_log WHERE timestamp = '2020-10-27 09:11:26.527';

# 2020-12-02 10:25:25.180688
+\d question_log

# 2020-12-02 10:25:39.865961
+\d top_questions

# 2020-12-02 10:29:59.189480
+ALTER INDEX top_questions_url_key SET url, instance_name;

# 2020-12-02 10:30:13.021702
+ALTER INDEX top_questions_url_key SET question_log url, instance_name;

# 2020-12-02 10:31:38.645920
+DROP INDEX top_questions_url_key;

# 2020-12-02 10:32:20.708888
+DROP UNIQUE INDEX top_questions_url_key;

# 2020-12-02 10:32:49.740295
+DROP INDEX top_questions_url_key;

# 2020-12-02 10:33:21.022583
+\d question_log

# 2020-12-02 10:52:14.279170
+SELECT count(*) FROM question_log;

# 2020-12-02 10:52:26.610882
+DROP INDEX top_questions_url_key;

# 2020-12-02 10:52:31.924415
+DROP INDEX top_questions_url_key CASCADE;

# 2020-12-02 10:53:06.351693
+ALTER TABLE top_questions DROP INDEX top_questions_url_key;

# 2020-12-02 10:53:21.815285
+ALTER TABLE top_questions DROP INDEX top_questions_url_key;;

# 2020-12-02 10:53:50.964157
+\d top_questions

# 2020-12-02 10:54:03.439145
+ALTER TABLE top_questions DROP CONSTRAINT top_questions_url_key;;

# 2020-12-02 10:54:08.211892
+\d top_questions

# 2020-12-02 10:54:52.562179
+ALTER TABLE top_questions CREATE UNIQUE CONSTRAINT url, instance_name;

# 2020-12-02 10:55:00.880482
+ALTER TABLE top_questions ADD UNIQUE CONSTRAINT url, instance_name;

# 2020-12-02 10:57:15.723479
+ALTER TABLE top_questions ADD CONSTRAINT UNIQUE (url, instance_name);

# 2020-12-02 10:57:32.882839
+ALTER TABLE top_questions ADD CONSTRAINT top_questions_url_instance_name_key UNIQUE (url, instance_name);

# 2020-12-02 10:58:38.014619
+REINDEX

# 2020-12-02 10:58:39.094290
+;

# 2020-12-02 10:58:42.415795
+REINDEX;

# 2020-12-02 10:58:49.704679
+REINDEX top_questions;

# 2020-12-02 10:59:01.628602
+REINDEX TABLE top_questions;

# 2020-12-02 13:15:04.664501
+\d question_log

# 2020-12-03 15:28:04.805403
+DELETE FROM events WHERE timestamp > '2020-12-02';

# 2020-12-03 15:32:19.975120
+SELECT count(*) FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01';

# 2020-12-03 15:32:37.307761
+SELECT count(*) FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND handoff_channel = 'email';

# 2020-12-03 15:33:23.051944
+SELECT count(*) FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01';

# 2020-12-04 10:03:17.492262
+SELECT * FROM instances;

# 2020-12-04 10:03:23.036008
+SELECT activated_at FROM instances;

# 2020-12-04 11:55:54.986443
+SELECT * FROM questions WHERE event_id IS NOT NULL;

# 2020-12-04 11:56:31.954738
+SELECT * FROM qas WHERE question_version_id = 118062;

# 2020-12-04 11:57:04.019762
+SELECT * FROM labelled_questions;

# 2020-12-04 11:57:13.839267
+SELECT label_method_event FROM labelled_questions;

# 2020-12-04 11:57:25.105024
+SELECT DISTINCT(label_method_event) FROM labelled_questions;

# 2020-12-04 18:35:44.224496
+SELECT * FROM knowledge_bases;

# 2020-12-04 18:35:57.941149
+SELECT count(*) FROM answers WHERE knowledge_base_id = 16;

# 2020-12-07 14:23:07.118935
+\d copilot_autolabels

# 2020-12-07 16:24:58.198060
+SELECT * FROM autopilot_autolabels;

# 2020-12-07 16:25:08.870144
+SELECT count(*) FROM autopilot_autolabels;

# 2020-12-07 16:27:19.804718
+SELECT * FROM autopilot_autolabels;

# 2020-12-07 16:36:31.931730
+SELECT count(*) FROM autopilot_autolabels;

# 2020-12-07 16:36:37.326869
+TRUNCATE autopilot_autolabels;

# 2020-12-07 16:37:23.459588
+SELECT count(*) FROM autopilot_autolabels;

# 2020-12-07 16:37:28.963220
+SELECT * FROM autopilot_autolabels;

# 2020-12-08 10:44:46.165753
+\d questions

# 2020-12-08 10:48:24.932625
+SELECT count(*) FROM questions ORDER BY question_id;

# 2020-12-08 10:49:00.291210
+EXPLAIN ANALYZE SELECT * FROM questions ORDER BY question_id;

# 2020-12-08 10:49:06.855934
+EXPLAIN ANALYZE SELECT * FROM questions ORDER BY question_id ASC;

# 2020-12-08 10:49:14.261773
+EXPLAIN ANALYZE SELECT * FROM questions ORDER BY question_id DESC;

# 2020-12-08 10:49:22.157421
+EXPLAIN ANALYZE SELECT * FROM questions ORDER BY question_id ASC;

# 2020-12-08 10:51:33.409044
+CREATE INDEX question_id_idx ON content.questions(question_id);

# 2020-12-08 10:51:42.691265
+REINDEX TABLE questions;

# 2020-12-08 10:51:47.731198
+EXPLAIN ANALYZE SELECT * FROM questions ORDER BY question_id ASC;

# 2020-12-08 10:51:58.106355
+EXPLAIN ANALYZE SELECT * FROM questions ORDER BY question_id DESC;

# 2020-12-08 10:52:01.612993
+\d questions

# 2020-12-08 10:52:25.311258
+\d answers

# 2020-12-08 10:52:31.686598
+EXPLAIN ANALYZE SELECT * FROM questions ORDER BY question_id DESC;

# 2020-12-08 10:52:42.871609
+EXPLAIN ANALYZE SELECT * FROM questions WHERE knowledge_base_id = 2 ORDER BY question_id DESC;

# 2020-12-08 10:53:06.699332
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2 ORDER BY question_id DESC;

# 2020-12-08 10:53:13.600655
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2 ORDER BY answer_id DESC;

# 2020-12-08 10:53:18.243794
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2;

# 2020-12-08 10:53:28.940930
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2 ORDER BY answer_id;;

# 2020-12-08 10:53:30.063812
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2 ORDER BY answer_id;

# 2020-12-08 10:53:35.267989
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2;

# 2020-12-08 10:53:40.926483
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2 ORDER BY answer_id;

# 2020-12-08 10:53:42.557052
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2;

# 2020-12-08 10:53:43.790271
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2 ORDER BY answer_id;

# 2020-12-08 10:53:56.872971
+CREATE INDEX question_id_idx ON content.questions(question_id);

# 2020-12-08 10:54:14.986652
+CREATE INDEX answer_id_idx ON content.answers(answer_id);

# 2020-12-08 10:54:17.829573
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2 ORDER BY answer_id;

# 2020-12-08 10:54:26.795079
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2;

# 2020-12-08 10:54:39.998502
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 2 ORDER BY answer_id;

# 2020-12-08 10:54:57.169637
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 1 ORDER BY answer_id;

# 2020-12-08 10:55:00.234693
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 1;

# 2020-12-08 10:55:05.704446
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 1 ORDER BY answer_id;

# 2020-12-08 10:55:12.716732
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 3 ORDER BY answer_id;

# 2020-12-08 10:55:21.450437
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 3;

# 2020-12-08 10:55:30.271894
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 7 ORDER BY answer_id;

# 2020-12-08 10:55:36.622393
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 7;

# 2020-12-08 10:55:53.500042
+SELECT count(*) FROM answers WHERE knowledge_base_id = 2;

# 2020-12-08 10:55:59.379444
+SELECT count(*) FROM answers;

# 2020-12-08 10:56:09.572054
+EXPLAIN ANALYZE SELECT * FROM answers ORDER BY answer_id ASC;

# 2020-12-08 10:56:19.886360
+EXPLAIN ANALYZE SELECT * FROM answers;

# 2020-12-08 13:52:34.264428
+TRUNCATE autolabels;

# 2020-12-08 14:24:51.515294
+\d autolabels

# 2020-12-08 14:34:24.499376
+TRUNCATE events;

# 2020-12-08 14:40:08.961341
+SELECT count(*) FROM autolabels;

# 2020-12-08 14:49:21.808265
+TRUNCATE autolabels;

# 2020-12-08 14:57:41.013829
+\d autolabels

# 2020-12-08 15:05:53.225217
+SELECT count(*) FROM autolabels;

# 2020-12-08 15:40:57.449486
+SELECT * FROM autolabels WHERE question_event_id = 213181;

# 2020-12-08 15:41:36.089611
+SELECT * FROM events WHERE id = 213181;

# 2020-12-08 15:41:52.819487
+SELECT * FROM events WHERE session_id = '6e08355c-7ec1-4b3d-820f-1ff0b5139a63';

# 2020-12-08 15:42:02.105833
+SELECT name FROM events WHERE session_id = '6e08355c-7ec1-4b3d-820f-1ff0b5139a63' ORDER BY timestamp;

# 2020-12-08 15:42:18.577067
+SELECT name, properties FROM events WHERE session_id = '6e08355c-7ec1-4b3d-820f-1ff0b5139a63' ORDER BY timestamp;

# 2020-12-08 15:43:20.788375
+SELECT timestamp, name, properties FROM events WHERE session_id = '6e08355c-7ec1-4b3d-820f-1ff0b5139a63' ORDER BY timestamp;

# 2020-12-08 15:44:00.278166
+SELECT * FROM autolabels WHERE instance_name = 'dataloen-autopilot-1';

# 2020-12-08 15:46:36.277485
+SELECT * FROM autolabels WHERE saved_in_kb_at IS NULL;

# 2020-12-08 15:46:51.421546
+SELECT * FROM autolabels WHERE question_event_id = 213181;

# 2020-12-08 15:47:05.331952
+DELETE FROM autolabels WHERE id = 3604;

# 2020-12-08 15:48:31.467370
+SELECT count(*) FROM autolabels WHERE instance_name = 'coop-autopilot-shopping'

# 2020-12-08 15:48:36.111105
+SELECT count(*) FROM autolabels WHERE instance_name = 'coop-autopilot-medlem'

# 2020-12-08 15:48:45.087668
+SELECT count(*) FROM autolabels WHERE instance_name = 'coop-autopilot-shopping';

# 2020-12-08 15:48:54.209346
+SELECT count(*) FROM autolabels WHERE instance_name = 'coop-autopilot-shopping' AND timestamp > '2020-10-01';

# 2020-12-08 15:48:56.670391
+SELECT count(*) FROM autolabels WHERE instance_name = 'coop-autopilot-shopping' AND timestamp > '2020-11-01';

# 2020-12-08 15:49:41.819589
+SELECT count(*) FROM autolabels;

# 2020-12-08 15:50:01.592692
+TRUNCATE autolabels;

# 2020-12-08 15:50:35.675368
+DELETE FROM questions WHERE event_id IS NOT NULL;

# 2020-12-08 15:50:46.274502
+DELETE FROM questions WHERE event_id IS NOT NULL CASCADE;

# 2020-12-08 15:51:14.857593
+DELETE FROM qas WHERE question_version_id IN (SELECT version_id FROM questions WHERE event_id IS NOT NULL);

# 2020-12-08 15:51:41.345873
+UPDATE qas SET deleted_at = NOW() WHERE question_version_id IN (SELECT version_id FROM questions WHERE event_id IS NOT NULL);

# 2020-12-08 16:11:45.845380
+SELECT * FROM answers WHERE answer_id = 4547;

# 2020-12-08 16:22:20.121158
+SELECT * FROM answers WHERE answer_id = 5025;

# 2020-12-08 16:24:27.767867
+SELECT * FROM answers WHERE answer_id = 7803;

# 2020-12-08 16:30:53.092876
+SELECT * FROM instance_name = 'coop-copilot-1';

# 2020-12-08 16:30:57.271387
+SELECT * FROM instance_name == 'coop-copilot-1';

# 2020-12-08 16:31:04.533166
+SELECT * FROM events WHERE instance_name = 'coop-copilot-1';

# 2020-12-08 16:31:14.541300
+SELECT name FROM events WHERE instance_name = 'coop-copilot-1';

# 2020-12-08 16:31:21.445083
+SELECT name, properties FROM events WHERE instance_name = 'coop-copilot-1';

# 2020-12-08 16:33:27.981448
+SELECT count(*) FROM autolabels WHERE saved_in_kb_at IS NULL;

# 2020-12-08 16:50:22.919070
+SELECT * FROM events WHERE id = 921340;

# 2020-12-08 16:50:34.029482
+SELECT properties FROM events WHERE id = 921340;

# 2020-12-08 17:28:46.789325
+SELECT count(*) FROM autolabels WHERE saved_in_kb_at IS NULL;

# 2020-12-08 17:28:50.306559
+SELECT count(*) FROM autolabels WHERE saved_in_kb_at IS NOT NULL;

# 2020-12-09 10:37:23.778443
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 2;

# 2020-12-09 10:37:29.974967
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 2 AND event_id IS NULL;

# 2020-12-09 10:37:47.093918
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 1 AND event_id IS NULL;

# 2020-12-09 10:37:52.131886
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 1;

# 2020-12-09 10:38:00.523358
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 2 AND event_id IS NULL;

# 2020-12-09 10:38:04.503741
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 2;

# 2020-12-09 10:38:20.756493
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 2 AND event_id > 20000;

# 2020-12-09 10:38:26.421488
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 2 AND event_id IS NOT NULL;

# 2020-12-09 10:38:34.246088
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 2 AND event_id > 500000;

# 2020-12-09 10:38:41.638465
+SELECT count(*) FROM latest_questions WHERE knowledge_base_id = 2;

# 2020-12-09 10:45:34.921354
+SELECT id, timestamp FROM events WHERE timestamp > 2020-10-01;

# 2020-12-09 10:45:39.839752
+SELECT id, timestamp FROM events WHERE timestamp > '2020-10-01';

# 2020-12-09 10:45:48.340722
+SELECT id, timestamp FROM events WHERE timestamp > '2020-10-01' ORDER BY timestamp;

# 2020-12-09 10:46:18.437000
+SELECT id, timestamp FROM events WHERE timestamp > '2020-11-01' ORDER BY timestamp;

# 2020-12-09 13:06:14.435808
+SELECT count(*) FROM autolabels WHERE saved_in_kb_at IS NOT NULL;

# 2020-12-09 13:06:18.784252
+SELECT count(*) FROM autolabels WHERE saved_in_kb_at IS NULL;

# 2020-12-09 13:56:26.677054
+SELECT * FROM instances;

# 2020-12-09 13:56:31.882210
+SELECT activated_at FROM instances;

# 2020-12-09 13:56:53.404631
+SELECT * FROM instances WHERE activated_at IS NULL;

# 2020-12-09 13:58:35.176762
+UPDATE instances SET activated_at = '0001-01-01 00:00:00' WHERE activated_at IS NULL;

# 2020-12-09 13:58:37.168829
+SELECT * FROM instances WHERE activated_at IS NULL;

# 2020-12-09 13:58:58.061370
+UPDATE instances SET activated_at = '0001-01-01 00:00:00' WHERE activated_at IS NULL;

# 2020-12-09 14:00:48.834342
+SELECT * FROM instances WHERE activated_at IS NULL;

# 2020-12-09 14:09:30.945312
+SELECT * FROM question_log WHERE question = "Jeg har problemer med jeres app";

# 2020-12-09 14:09:36.841225
+SELECT * FROM question_log WHERE question = 'Jeg har problemer med jeres app';

# 2020-12-09 14:10:25.782769
+SELECT * FROM questions WHERE question_id = 118133;

# 2020-12-09 14:40:23.563149
+EXPLAIN ANALYZE SELECT * FROM answers;

# 2020-12-09 14:40:36.973793
+EXPLAIN ANALYZE SELECT * FROM answers ORDER BY answer_id ASC;

# 2020-12-09 14:40:50.344894
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 16 ORDER BY answer_id ASC;

# 2020-12-09 14:41:10.027954
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 16;

# 2020-12-09 14:41:13.306202
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 16 ORDER BY answer_id ASC;

# 2020-12-09 14:41:17.668334
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 16;

# 2020-12-09 14:41:19.243316
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 16 ORDER BY answer_id ASC;

# 2020-12-09 14:41:42.155072
+SELECT * FROM answers WHERE knowledge_bases = 16;

# 2020-12-09 14:41:46.224290
+SELECT * FROM answers WHERE knowledge_base_id = 16;

# 2020-12-09 14:41:59.698728
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 16 ORDER BY answer_id ASC;

# 2020-12-09 14:42:08.961979
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 16 AND version_id = 51760 ORDER BY answer_id ASC;

# 2020-12-09 14:42:15.692501
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 16 AND version_id = 51760;

# 2020-12-09 14:42:21.229869
+EXPLAIN ANALYZE SELECT * FROM answers WHERE knowledge_base_id = 16 AND version_id = 51760 ORDER BY answer_id ASC;

# 2020-12-09 14:52:16.740626
+SELECT * FROM question_log WHERE question = 'jeg modtager ikke bekræftelse på min bestilling';

# 2020-12-09 16:33:49.749893
+SELECT count(*) FROM questions WHERE event_id IS NOT NULL;

# 2020-12-10 11:30:30.485496
+SELECT count(*) FROM top_questions;

# 2020-12-10 11:30:40.062821
+SELECT * FROM top_questions;

# 2020-12-10 11:52:01.866144
+\dt

# 2020-12-10 11:52:07.422277
+SELECT * FROM accounts;

# 2020-12-10 11:52:26.354372
+SELECT * FROM instances;

# 2020-12-10 11:52:52.772908
+SELECT locale FROM instances;

# 2020-12-10 11:53:30.238332
+\d

# 2020-12-10 11:53:34.064300
+\dt

# 2020-12-10 11:53:36.481274
+\dt teams

# 2020-12-10 11:53:38.459406
+\d teams

# 2020-12-10 11:53:51.708407
+\d users

# 2020-12-10 11:54:11.345926
+\d am.accounts

# 2020-12-10 14:24:50.424821
+SELECT * FROM users_teams WHERE user_id = 18;

# 2020-12-10 14:25:27.954413
+SELECT * FROM users WHERE user_id = 18;

# 2020-12-10 14:25:31.059301
+SELECT * FROM users WHERE id = 18;

# 2020-12-10 14:25:36.685443
+\d

# 2020-12-10 14:25:37.902549
+\dt

# 2020-12-10 14:28:04.162868
+\dt am.

# 2020-12-10 14:41:10.872417
+SELECT * FROM accounts WHERE id = 8;

# 2020-12-10 14:41:20.533282
+SELECT * FROM accounts ORDER BY id;

# 2020-12-10 14:44:37.971859
+SELECT * FROM users_teams WHERE team_id = 5;

# 2020-12-10 14:44:47.964331
+SELECT * FROM users_teams WHERE team_id = 4;

# 2020-12-10 14:45:11.935254
+UPDATE teams SET deleted_at = NULL WHERE id = 4;

# 2020-12-10 16:10:08.488020
+\dt purchased_products

# 2020-12-10 16:10:15.753412
+\d purchased_products

# 2020-12-10 17:09:24.481559
+SELECT * FROM accounts;

# 2020-12-10 17:57:20.200125
+SELECT * FROM instances;

# 2020-12-11 14:57:04.880591
+SELECT u.*
+FROM   unnest('{13589, 16674, 13588}'::int[]) WITH ORDINALITY AS x(id, order_nr)
+JOIN   users u USING (id)
+ORDER  BY x.order_nr;

# 2020-12-11 14:58:42.571398
+SELECT version_id, answer_id FROM unnest('{13589, 16674, 13588}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) JOIN answers USING (answer_id) ORDER BY x.order_nr;

# 2020-12-11 14:58:51.130428
+SELECT * FROM answers WHERE knowledge_base_id = 1;

# 2020-12-11 14:58:56.088759
+SELECT answer_id FROM answers WHERE knowledge_base_id = 1;

# 2020-12-11 14:59:17.804682
+SELECT version_id, answer_id FROM unnest('{1705, 1577}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) JOIN answers USING (answer_id) ORDER BY x.order_nr;

# 2020-12-11 14:59:27.487561
+SELECT version_id, answer_id FROM unnest('{1705, 1577}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) JOIN latest_answers USING (answer_id) ORDER BY x.order_nr;

# 2020-12-11 14:59:40.418951
+SELECT version_id, answer_id FROM unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) JOIN latest_answers USING (answer_id) ORDER BY x.order_nr;

# 2020-12-11 15:00:06.319320
+SELECT version_id, answer_id FROM unnest('{1577, 1705}') WITH ORDINALITY AS x(answer_id, order_nr) JOIN latest_answers USING (answer_id) ORDER BY x.order_nr;

# 2020-12-11 15:00:07.990670
+SELECT version_id, answer_id FROM unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) JOIN latest_answers USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:39:21.439100
+SELECT version_id, answer_id FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) ORDER BY x.order_nr;

# 2020-12-14 17:39:29.039744
+SELECT version_id, answer_id FROM unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) JOIN latest_answers USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:39:45.745500
+SELECT version_id, answer_id FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr);

# 2020-12-14 17:40:01.146430
+SELECT version_id, answer_id FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr)  USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:40:13.113395
+SELECT * FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr)  USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:40:52.311885
+SELECT * FROM latest_answers JOIN unnest('{1705, 1577}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr)  USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:40:58.658420
+SELECT * FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr)  USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:41:05.198927
+EXPLAIN SELECT * FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr)  USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:41:12.684565
+EXPLAIN ANALYZE SELECT * FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr)  USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:51:15.295993
+SELECT * FROM latest_answers JOIN unnest('{'1577', '1705'}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:51:26.958301
+SELECT * FROM latest_answers JOIN unnest({'1577', '1705'}::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:51:36.436723
+SELECT * FROM latest_answers JOIN unnest(('1577', '1705')::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:53:32.434754
+SELECT * FROM latest_answers JOIN unnest(ARRAY['1577', '1705']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:53:40.769420
+SELECT * FROM latest_answers JOIN unnest(ARRAY['1577', '1705']) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:53:44.052221
+SELECT * FROM latest_answers JOIN unnest(ARRAY['1577', '1705']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-14 17:53:59.147032
+SELECT * FROM latest_answers JOIN unnest(ARRAY['1705', '1577']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-15 15:01:30.025832
+\dt

# 2020-12-15 15:01:31.404335
+\d

# 2020-12-15 16:00:12.459948
+SELECT question_id FROM questions WHERE question = "hej" AND source = production ORDER BY timestamp LIMIT 1;

# 2020-12-15 16:00:19.439568
+SELECT question_id FROM questions WHERE question = 'hej' AND source = production ORDER BY timestamp LIMIT 1;

# 2020-12-15 16:00:25.832746
+SELECT question_id FROM questions WHERE question = 'hej' AND data_source = production ORDER BY timestamp LIMIT 1;

# 2020-12-15 16:00:31.885290
+SELECT question_id FROM questions WHERE question = 'hej' AND data_source = 'production' ORDER BY timestamp LIMIT 1;

# 2020-12-15 16:00:37.651609
+SELECT question_id FROM questions WHERE question = 'hej' AND data_source = 'production' ORDER BY created_at LIMIT 1;

# 2020-12-15 16:00:46.227197
+SELECT question_id FROM latest_questions WHERE question = 'hej' AND data_source = 'production' ORDER BY created_at LIMIT 1;

# 2020-12-15 16:03:12.898568
+\d question_log

# 2020-12-15 16:08:58.839452
+ls

# 2020-12-15 16:09:25.042075
+SELECT count(*) FROM question_feed;

# 2020-12-15 16:15:33.049504
+UPDATE question_feed SET label = 'answered' WHERE id < 100;

# 2020-12-15 16:15:49.136435
+UPDATE question_feed SET label = 'ignored' WHERE id > 100 AND id < 200;

# 2020-12-15 16:16:02.026648
+UPDATE question_feed SET label = 'skipped' WHERE id > 100 AND id < 200;

# 2020-12-15 16:16:14.710756
+SELECT count(*) FROM question_log;

# 2020-12-15 16:25:42.446996
+SELECT count(*) FROM question_log WHERE label = 'ignored';

# 2020-12-15 16:25:47.382458
+SELECT count(*) FROM question_log WHERE label = 'answered';

# 2020-12-15 16:25:51.750439
+SELECT count(*) FROM question_log WHERE label = 'learned';

# 2020-12-15 16:26:26.467358
+SELECT DISTINCT(timestamp) FROM question_log;

# 2020-12-15 16:26:32.886486
+SELECT NOT DISTINCT(timestamp) FROM question_log;

# 2020-12-15 16:26:43.413085
+SELECT count(DISTINCT(timestamp)) FROM question_log;

# 2020-12-15 16:26:52.491772
+SELECT count(timestamp) FROM question_log;

# 2020-12-15 16:26:54.992699
+SELECT count(DISTINCT(timestamp)) FROM question_log;

# 2020-12-15 16:26:57.506209
+SELECT count(timestamp) FROM question_log;

# 2020-12-15 16:31:25.538632
+SELECT * FROM question_log WHERE timestamp IN (SELECT timestamp FROM question_log GROUP BY timestamp HAVING COUNT(*) > 1);

# 2020-12-15 16:33:28.083682
+TRUNCATE question_feed;

# 2020-12-15 17:27:00.751984
+UPDATE question_log SET label = 'ignored' WHERE timestamp = '2020-09-09T11:41:57.79Z' AND instance_name = 'raffle-autopilot-1';

# 2020-12-15 17:27:13.911258
+SELECT * FROM question_log WHERE timestamp = '2020-09-09T11:41:57.79Z' AND instance_name = 'raffle-autopilot-1';

# 2020-12-15 17:27:21.019587
+SELECT * FROM question_log WHERE timestamp = '2020-09-09T11:41:57' AND instance_name = 'raffle-autopilot-1';

# 2020-12-15 17:27:25.721522
+SELECT * FROM question_log WHERE timestamp = '2020-09-09T11:41' AND instance_name = 'raffle-autopilot-1';

# 2020-12-15 17:27:36.972942
+SELECT * FROM question_log WHERE timestamp < '2020-09-09T12:00' AND instance_name = 'raffle-autopilot-1';

# 2020-12-15 17:27:44.588285
+SELECT * FROM question_log WHERE timestamp < '2020-09-30T12:00' AND instance_name = 'raffle-autopilot-1';

# 2020-12-15 17:27:50.858527
+SELECT * FROM question_log WHERE timestamp < '2020-12-30T12:00' AND instance_name = 'raffle-autopilot-1';

# 2020-12-15 17:42:12.709433
+SELECT * FROM latest_questions WHERE question = 'Hej, ville høre om jeg kunne sæt mine betalinger på stand-by?';

# 2020-12-15 17:43:07.356208
+SELECT * FROM latest_questions WHERE question_id IN (117639);

# 2020-12-15 17:43:13.738365
+SELECT * FROM latest_questions WHERE question = 'Hej, ville høre om jeg kunne sæt mine betalinger på stand-by?';

# 2020-12-15 17:43:30.726358
+SELECT * FROM qas WHERE question_version_id IN (SELECT version_id FROM latest_questions WHERE question = 'Hej, ville høre om jeg kunne sæt mine betalinger på stand-by?');

# 2020-12-15 18:07:39.994558
+SELECT count(*) FROM question_log WHERE label != 'incoming';

# 2020-12-15 18:08:00.694785
+SELECT count(*) FROM question_feed WHERE label IS NOT NULL;

# 2020-12-15 18:26:51.870565
+SELECT count(*) FROM question_feed WHERE label == 'answered' AND label = 'skipped';

# 2020-12-15 18:26:57.383198
+SELECT count(*) FROM question_feed WHERE label = 'answered' AND label = 'skipped';

# 2020-12-15 18:27:02.033718
+SELECT count(*) FROM question_feed WHERE label = 'answered' OR label = 'skipped';

# 2020-12-16 12:41:59.804444
+SELECT * FROM question_log JOIN unnest($1::int[]) WITH ORDINALITY AS x(id, order_nr) USING (id) WHERE (id = $2 OR id = $3 OR id = $4 OR id = $5) ORDER BY timestamp DESC OFFSET 0;

# 2020-12-16 12:42:23.931123
+SELECT * FROM question_log JOIN unnest('{1,2,3,4}'::int[]) WITH ORDINALITY AS x(id, order_nr) USING (id) WHERE (id = 1 OR id = 2 OR id = 3 OR id = 4) ORDER BY timestamp DESC OFFSET 0;

# 2020-12-16 12:44:58.983356
+SELECT * FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-16 12:46:53.990530
+SELECT * FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) RETURNING answer_id ORDER BY x.order_nr;

# 2020-12-16 12:47:09.509979
+SELECT * FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr RETURNING answer_id;

# 2020-12-16 12:49:00.342949
+SELECT * FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-16 12:49:07.396956
+SELECT latest_answers.* FROM latest_answers JOIN unnest('{1577, 1705}'::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2020-12-16 12:53:05.400453
+SELECT question_log.* FROM question_log ORDER BY question_log.timestamp DESC OFFSET 0 LIMIT 1;

# 2020-12-16 12:56:47.460215
+SELECT question_log.* FROM question_log ORDER BY timestamp DESC OFFSET 0 LIMIT 1;

# 2020-12-18 15:31:38.079450
+SELECT id, timestamp FROM question_log WHERE ip IS NULL OR ip = '';

# 2020-12-18 15:31:45.224411
+SELECT id, timestamp FROM question_log;

# 2020-12-18 15:32:28.311375
+UPDATE question_log SET ip = NULL, user_agent = NULL WHERE id < 10000;

# 2020-12-18 15:33:49.678048
+\d

# 2020-12-18 15:33:54.293985
+\d events

# 2020-12-18 15:34:08.944361
+SELECT * FROM events WHERE user_agent IS NULL;

# 2020-12-18 15:34:13.289715
+SELECT * FROM events WHERE user_agent = '';

# 2020-12-18 15:36:47.635425
+\d

# 2020-12-18 15:36:50.687917
+\dt

# 2020-12-18 15:44:16.219542
+SELECT count(*) FROM question_log;

# 2020-12-18 16:15:52.966311
+SELECT count(*) FROM question_log WHERE ip IS NOT NULL;

# 2020-12-18 21:00:20.128907
+SELECT * FROM question_log WHERE ip IS NOT NULL;

# 2020-12-18 21:00:31.498729
+SELECT * FROM question_log WHERE ip IS NOT NULL AND id = 179342;

# 2020-12-18 21:00:53.270630
+SELECT * FROM events WHERE timestamp = '2020-07-13 06:21:02.282';

# 2020-12-18 21:22:36.074701
+SELECT count(*) FROM question_log WHERE ip IS NOT NULL;

# 2020-12-18 21:23:08.715741
+SELECT * FROM question_log WHERE ip IS NOT NULL AND id = 179342;

# 2020-12-18 21:23:32.249556
+SELECT * FROM events WHERE timestamp = '2020-07-13 06:21:02.282';

# 2020-12-18 21:23:49.051049
+SELECT count(*) FROM question_log WHERE ip IS NOT NULL;

# 2020-12-18 21:27:22.103669
+SELECT count(*) FROM question_log WHERE ip IS NULL;

# 2020-12-18 22:09:10.727555
+SELECT * FROM question_log WHERE id = 179443;

# 2020-12-18 22:09:38.686607
+SELECT * FROM events WHERE timestamp = '2020-07-13 13:18:34.12';

# 2020-12-18 22:09:59.488589
+SELECT * FROM question_log WHERE id = 276945;

# 2020-12-18 22:10:08.725907
+SELECT * FROM events WHERE timestamp = '2020-12-16 12:41:59.51';

# 2020-12-29 11:19:21.272415
+\dt

# 2020-12-29 11:19:26.598685
+\d+ datasets

# 2020-12-29 11:19:44.251414
+\d migrations

# 2020-12-29 11:19:51.041738
+SELECT * FROM migrations;

# 2020-12-29 11:19:54.812335
+\d

# 2020-12-29 11:19:59.675674
+\d+ metrics

# 2020-12-29 11:20:51.040494
+\d+ ml_models

# 2020-12-29 15:16:24.796094
+SELECT count(*) FROM answers;

# 2020-12-29 15:18:31.700614
+SELECT * FROM datasets;

# 2020-12-29 16:12:58.685476
+SELECT * FROM answers;

# 2020-12-29 16:14:22.030059
+\dt

# 2020-12-29 16:15:24.363727
+SELECT DISTINCT ON (answer_id) * FROM answers

# 2020-12-29 16:16:18.790441
+SELECT DISTINCT ON (answer_id) SUM(views) FROM answers;

# 2020-12-29 16:16:26.506221
+SELECT DISTINCT ON (answer_id) * SUM(views) FROM answers;

# 2020-12-29 16:16:30.401649
+SELECT DISTINCT ON (answer_id) *, SUM(views) FROM answers;

# 2020-12-29 16:16:37.543872
+SELECT DISTINCT ON (answer_id) * FROM answers;

# 2020-12-29 16:16:50.794456
+SELECT DISTINCT ON (answer_id) answer_id, SUM(views) FROM answers;

# 2020-12-29 16:16:57.604173
+SELECT DISTINCT ON (answer_id) * answer_id, SUM(views) FROM answers;

# 2020-12-29 16:17:04.191371
+SELECT answer_id, SUM(views) FROM answers;

# 2020-12-29 16:17:14.848402
+SELECT DISTINCT ON (answer_id) * FROM answers

# 2020-12-29 16:17:26.839547
+SELECT answer_id FROM answers

# 2020-12-29 16:17:35.822179
+SELECT DISTINCT(answer_id) FROM answers

# 2020-12-29 16:17:52.938495
+SELECT DISTINCT(answer_id), SUM(views) FROM answers

# 2020-12-29 16:17:58.703337
+SELECT DISTINCT(answer_id) FROM answers

# 2020-12-29 16:18:04.862648
+SELECT * DISTINCT(answer_id) FROM answers

# 2020-12-29 16:18:08.709698
+SELECT *, DISTINCT(answer_id) FROM answers

# 2020-12-29 16:19:28.589127
+\dt

# 2020-12-29 16:19:30.907200
+\d answers

# 2020-12-29 16:20:32.847423
+SELECT answer_id, topic_ids, views, accepts, resolve_count, handoffs FROM answers;

# 2020-12-29 16:21:09.968283
+SELECT answer_id, topic_ids, SUM(views), accepts, resolve_count, handoffs FROM answers;

# 2020-12-29 16:21:33.889529
+SELECT answer_id, topic_ids, views, accepts, resolve_count, handoffs FROM answers GROUP BY answer_id;

# 2020-12-29 16:21:52.465962
+SELECT answer_id, topic_ids, views, accepts, resolve_count, handoffs FROM answers GROUP BY answer_id, topic_ids, views, accepts, resolve_count, handoffs;

# 2020-12-29 16:22:06.011716
+SELECT answer_id, topic_ids, views, accepts, resolve_count, handoffs FROM answers;

# 2020-12-29 16:22:43.919754
+SELECT answer_id, topic_ids, SUM(views) AS total_views, accepts, resolve_count, handoffs FROM answers;

# 2020-12-29 16:23:12.588551
+SELECT answer_id, topic_ids, SUM(views) AS total_views, accepts, resolve_count, handoffs FROM answers GROUP BY answer_id;

# 2020-12-29 16:23:27.228271
+SELECT DISTINCT(answer_id), topic_ids, SUM(views) AS total_views, accepts, resolve_count, handoffs FROM answers;

# 2020-12-29 16:23:38.636629
+SELECT DISTINCT(answer_id), SUM(views) AS total_views FROM answers;

# 2020-12-29 16:23:47.014558
+SELECT DISTINCT(answer_id), SUM(views) AS total_views FROM answers GROUP BY answer_id;

# 2020-12-29 16:23:58.181708
+SELECT DISTINCT(answer_id), SUM(views) AS total_views FROM answers GROUP BY answer_id ORDER BY total_views;

# 2020-12-29 16:24:00.643036
+SELECT DISTINCT(answer_id), SUM(views) AS total_views FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:24:32.501957
+SELECT DISTINCT(answer_id), topic_ids, SUM(views) AS total_views FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:24:38.069916
+SELECT DISTINCT(answer_id), topic_ids, SUM(views) AS total_views FROM answers GROUP BY answer_id, topic_ids ORDER BY total_views DESC;

# 2020-12-29 16:24:54.954498
+SELECT DISTINCT(answer_id), SUM(views) AS total_views FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:26:20.151011
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:27:43.886821
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, (total_resolve_count / total_views) * 100 AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:28:47.444762
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, (SUM(resolve_count) / SUM(views)) * 100 AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:29:52.336547
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, (SUM(resolve_count) /COALESCE(SUM(views),1)) * 100 AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:45:25.361989
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, (SUM(resolve_count) / SUM(views) * 100 AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:45:26.355187
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, (SUM(resolve_count) / SUM(views)) * 100 over () AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:45:41.087553
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, (SUM(resolve_count) / SUM(views)) * 100.0 over () AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:48:17.190084
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, if SUM(views) != 0 then ((SUM(resolve_count) / SUM(views)) * 100.0) else 0 AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:49:04.355486
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, if SUM(views) IS NOT 0 then ((SUM(resolve_count) / SUM(views)) * 100.0) else 0 AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:54:44.255204
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator integer, denominator integer) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0
+          RETURN (numerator/denominator)*100.0
+        ELSE
+          RETURN 0
+        FI
+    END;
+$$ LANGUAGE plpgsql;

# 2020-12-29 16:55:04.896815
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator integer, denominator integer) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0 THEN
+          RETURN (numerator/denominator)*100.0
+        ELSE
+          RETURN 0
+        FI
+    END;
+$$ LANGUAGE plpgsql;

# 2020-12-29 16:55:56.415277
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator integer, denominator integer) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0
+        THEN
+            RETURN (numerator/denominator)*100.0
+        ELSE
+            RETURN 0
+    END;
+$$ LANGUAGE plpgsql;

# 2020-12-29 16:56:33.179196
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator integer, denominator integer) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0
+        THEN
+            RETURN (numerator/denominator)*100.0;
+        ELSE
+            RETURN 0;
+        END IF;
+    END;
+$$ LANGUAGE plpgsql;

# 2020-12-29 16:57:07.606064
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count),SUM(views)) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:58:44.412313
+\d

# 2020-12-29 16:58:46.497849
+\d+

# 2020-12-29 16:58:48.857637
+?

# 2020-12-29 16:58:50.242230
+\?

# 2020-12-29 16:58:54.169090
+\df

# 2020-12-29 16:58:59.757592
+\df+

# 2020-12-29 16:59:38.892346
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 16:59:50.658537
+\df+

# 2020-12-29 17:00:05.995450
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:02:01.650661
+SELECT DISTINCT(answer_id), SUM(views)::integer AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:02:17.337244
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator integer, denominator integer) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0
+        THEN
+            RETURN (numerator/denominator)*100;
+        ELSE
+            RETURN 0;
+        END IF;
+    END;
+$$ LANGUAGE plpgsql;

# 2020-12-29 17:02:20.594450
+SELECT DISTINCT(answer_id), SUM(views)::integer AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:03:34.971057
+SELECT calculate_percentage(1 , 100)

# 2020-12-29 17:03:40.320712
+SELECT calculate_percentage(1.0, 100.0)

# 2020-12-29 17:03:45.668916
+SELECT calculate_percentage(1, 100)

# 2020-12-29 17:03:49.497230
+SELECT calculate_percentage(1, 0)

# 2020-12-29 17:04:45.879066
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator integer, denominator integer) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0
+        THEN
+            SELECT print('SHIT');
+            RETURN (numerator/denominator)*100;
+        ELSE
+            RETURN 0;
+        END IF;
+    END;
+$$ LANGUAGE plpgsql;

# 2020-12-29 17:04:49.490002
+SELECT calculate_percentage(1, 0)

# 2020-12-29 17:04:54.028817
+SELECT calculate_percentage(1, 10)

# 2020-12-29 17:06:29.275176
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator integer, denominator integer) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0
+        THEN
+            RETURN (numerator::float/denominator)*100;
+        ELSE
+            RETURN 0;
+        END IF;
+    END;
+$$ LANGUAGE plpgsql;

# 2020-12-29 17:06:32.753763
+SELECT calculate_percentage(1, 10)

# 2020-12-29 17:06:36.047875
+SELECT calculate_percentage(1, 100)

# 2020-12-29 17:06:37.543782
+SELECT calculate_percentage(1, 1000)

# 2020-12-29 17:06:39.089208
+SELECT calculate_percentage(1, 10000)

# 2020-12-29 17:06:40.575021
+SELECT calculate_percentage(1, 100000)

# 2020-12-29 17:06:42.137045
+SELECT calculate_percentage(1, 1000000)

# 2020-12-29 17:06:44.124827
+SELECT calculate_percentage(1, 10000000)

# 2020-12-29 17:07:05.421185
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator int, denominator int) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0
+        THEN
+            RETURN (numerator::float/denominator)*100;
+        ELSE
+            RETURN 0;
+        END IF;
+    END;
+$$ LANGUAGE plpgsql;

# 2020-12-29 17:07:08.945485
+SELECT calculate_percentage(1, 10000000)

# 2020-12-29 17:07:11.947633
+\dt

# 2020-12-29 17:07:15.252112
+\d+ answers

# 2020-12-29 17:07:33.151782
+SELECT DISTINCT(answer_id), SUM(views)::integer AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:07:49.787877
+SELECT DISTINCT(answer_id), SUM(views)::integer AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count),SUM(views)) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:07:51.959204
+SELECT DISTINCT(answer_id), SUM(views)::integer AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:09:06.767501
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count::integer),SUM(views::integer)) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:09:33.581948
+SELECT DISTINCT(answer_id), SUM(views)::integer AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:09:49.016564
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:17:28.101948
+SELECT SPLIT_PART('acc-instance-2', '-', 1);

# 2020-12-29 17:18:11.771999
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:18:31.872309
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(resolve_count)::integer,SUM(views)::integer) AS resolve_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2020-12-29 17:20:51.613089
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2020-12-29 17:21:28.902607
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:22:37.748293
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:23:33.645972
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(MAX(instance_name), '-', 1) AS account_name FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:23:45.052560
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:23:48.245405
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(MAX(instance_name), '-', 1) AS account_name FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:23:50.821423
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:23:52.484553
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(MAX(instance_name), '-', 1) AS account_name FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:24:35.845629
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(MAX(instance_name), '-', 1) AS account_name FROM answers GROUP BY answer_id ORDER BY total_views DESC WHERE account_name = 'viabill';

# 2020-12-29 17:25:16.542342
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(MAX(instance_name), '-', 1) AS account_name FROM answers WHERE account_name = 'viabill' GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-29 17:25:19.260430
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(MAX(instance_name), '-', 1) AS account_name FROM answers GROUP BY answer_id ORDER BY total_views DESC WHERE account_name = 'viabill';

# 2020-12-29 17:25:23.497056
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(MAX(instance_name), '-', 1) AS account_name FROM answers GROUP BY answer_id ORDER BY total_views DESC;

# 2020-12-30 10:36:55.832554
+SELECT * FROM qas;

# 2020-12-30 10:37:09.301906
+SELECT * FROM qas WHERE answer_version_id = 513;

# 2020-12-30 10:37:16.088715
+SELECT count(*) FROM qas WHERE answer_version_id = 513;

# 2020-12-30 10:38:32.378674
+CREATE OR REPLACE FUNCTION calculate_question_count(vid int) RETURNS int AS $$
+    BEGIN
+        RETURN SELECT count(*) FROM qas WHERE answer_version_id = vid;
+    END;
+$$ LANGUAGE plpgsql;
+

# 2020-12-30 10:38:49.879378
+CREATE OR REPLACE FUNCTION calculate_question_count(vid int) RETURNS int AS $$
+    BEGIN
+        RETURN (SELECT count(*) FROM qas WHERE answer_version_id = vid);
+    END;
+$$ LANGUAGE plpgsql;
+

# 2020-12-30 10:39:12.115986
+SELECT calculate_question_count(513);

# 2020-12-30 10:57:46.344301
+CREATE OR REPLACE FUNCTION update_question_count() RETURNS TRIGGER AS $$
+BEGIN
+ IF (TG_OP = 'INSERT' AND NEW.deleted_at IS NOT NULL) THEN
+  EXECUTE format('UPDATE answers SET question_count=calculate_question_count($1) WHERE version_id = $1) USING NEW.version_id;
+ END IF;
+ RETURN NULL;
+END;
+$$ LANGUAGE plpgsql;

# 2020-12-30 10:58:24.952226
+CREATE OR REPLACE FUNCTION update_question_count() RETURNS TRIGGER AS $$
+BEGIN
+ IF (TG_OP = 'INSERT' AND NEW.deleted_at IS NOT NULL) THEN
+  EXECUTE format('UPDATE answers SET question_count=calculate_question_count($1) WHERE version_id = $1') USING NEW.version_id;
+ END IF;
+ RETURN NULL;
+END;
+$$ LANGUAGE plpgsql;
+

# 2020-12-30 10:58:45.471048
+CREATE TRIGGER trigger_question_count AFTER
+INSERT ON answers
+FOR EACH ROW EXECUTE PROCEDURE update_question_count();

# 2020-12-30 11:49:23.672505
+SELECT count(*) FROM questions;

# 2020-12-30 11:49:31.681225
+SELECT count(*) FROM latest_questions;

# 2020-12-30 12:24:17.812811
+DELETE FROM answers WHERE knowledge_base_id NOT IN (1,2);

# 2020-12-30 12:25:03.181712
+TRUNCATE datasets;

# 2020-12-30 12:25:08.348359
+TRUNCATE snapshots;

# 2020-12-30 12:25:11.558593
+TRUNCATE snapshots_qas;

# 2020-12-30 12:25:14.710630
+TRUNCATE snapshots;

# 2020-12-30 12:25:24.820310
+TRUNCATE snapshots_qas;

# 2020-12-30 12:25:36.804818
+SELECT count(*) FROM snapshots_qas;

# 2020-12-30 12:25:43.880518
+TRUNCATE snapshots;

# 2020-12-30 12:25:49.736798
+TRUNCATE snapshots CASCADE;

# 2020-12-30 12:25:57.175401
+TRUNCATE datasets CASCADE;

# 2020-12-30 12:26:49.040646
+DELETE qas WHERE answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id NOT IN (1,2));

# 2020-12-30 12:26:58.194330
+DELETE FROM qas WHERE answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id NOT IN (1,2));

# 2020-12-30 12:27:17.292220
+DELETE FROM answers WHERE knowledge_base_id NOT IN (1,2);

# 2020-12-30 12:27:39.816515
+DELETE FROM topics_answers WHERE answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id NOT IN (1,2));

# 2020-12-30 12:27:43.245951
+DELETE FROM answers WHERE knowledge_base_id NOT IN (1,2);

# 2020-12-30 12:28:47.350220
+DELETE FROM questions WHERE knowledge_base_id NOT IN (1,2);

# 2020-12-30 12:28:54.276207
+\d

# 2020-12-30 12:29:03.303774
+\dt

# 2020-12-30 12:29:23.619484
+ls

# 2020-12-30 12:32:08.572370
+TRUNCATE review_flagged_answers;

# 2020-12-30 12:32:11.836946
+\d

# 2020-12-30 12:32:45.801135
+g s

# 2020-12-30 12:32:46.591701
+ls

# 2020-12-30 15:01:13.017572
+\d

# 2020-12-30 15:01:16.886491
+\d answers

# 2020-12-30 15:10:44.435677
+SELECT * FROM answers WHERE version_id = 89185;

# 2020-12-30 16:20:58.890417
+SELECT * FROM qas WHERE answer_version_id = 89185;

# 2020-12-30 16:21:09.305637
+SELECT * FROM answers WHERE version_id = 89185;

# 2020-12-30 16:21:28.665851
+SELECT answer_version_id FROM answers WHERE answer_id = 1540;

# 2020-12-30 16:21:34.082917
+SELECT version_id FROM answers WHERE answer_id = 1540;

# 2020-12-30 16:22:20.820819
+SELECT * FROM qas WHERE answer_version_id = 12888;

# 2020-12-30 16:22:25.788483
+SELECT * FROM qas WHERE answer_version_id = 9361;

# 2020-12-30 16:22:34.860794
+SELECT count(*) FROM qas;

# 2020-12-30 16:28:43.023308
+SELECT * FROM migrations;

# 2020-12-30 16:28:48.064202
+\d answers

# 2020-12-30 16:38:28.660625
+\d

# 2020-12-30 16:38:30.588192
+\dt

# 2020-12-30 16:38:36.869400
+\df

# 2020-12-30 16:38:50.822562
+SELECT calculate_question_count(513);

# 2020-12-30 16:39:11.646688
+SELECT calculate_question_count(SELECT version_id FROM answers);

# 2020-12-30 16:39:19.636207
+SELECT calculate_question_count(SELECT version_id FROM answers WHERE knowledge_base_id = 1);

# 2020-12-30 16:39:33.457744
+SELECT calculate_question_count(SELECT version_id FROM answers WHERE version_id = 500);

# 2020-12-30 16:39:38.551128
+SELECT calculate_question_count(SELECT version_id FROM answers WHERE version_id = 500;);

# 2020-12-30 16:39:45.747669
+SELECT calculate_question_count((SELECT version_id FROM answers WHERE version_id = 500;));

# 2020-12-30 16:39:48.457759
+SELECT calculate_question_count((SELECT version_id FROM answers WHERE version_id = 500));

# 2020-12-30 16:40:11.679171
+SELECT calculate_question_count($1);

# 2020-12-30 16:40:44.472959
+SELECT calculate_question_count($1) values 500;

# 2020-12-30 16:40:50.236062
+SELECT calculate_question_count($1) values (500);

# 2020-12-30 16:41:01.780237
+SELECT calculate_question_count($1) (500);

# 2020-12-30 16:41:32.694668
+\df+

# 2020-12-30 17:16:31.436157
+SELECT count(*) FROM qas;

# 2020-12-30 17:21:57.173212
+CREATE TRIGGER TRIGGER_insert_qa_update_counts AFTER
+INSERT ON qas
+FOR EACH ROW EXECUTE PROCEDURE insert_qa_answer_question_count();

# 2020-12-30 17:22:02.923417
+CREATE TRIGGER TRIGGER_update_qa_update_counts AFTER
+UPDATE OF deleted_at ON qas
+FOR EACH ROW EXECUTE PROCEDURE update_qa_answer_question_count();

# 2020-12-30 17:23:06.123727
+SELECT count(*) FROM qas WHERE answer_version_id = 12888;

# 2020-12-30 17:23:39.214807
+SELECT count(*) FROM qas GROUP BY answer_version_id;

# 2020-12-30 17:23:45.013230
+SELECT count(*) FROM qas GROUP BY answer_version_id ORDER BY count;

# 2020-12-30 17:23:47.546670
+SELECT count(*) FROM qas GROUP BY answer_version_id ORDER BY count DESC;

# 2020-12-30 17:23:54.136846
+SELECT count(*), answer_version_id FROM qas GROUP BY answer_version_id ORDER BY count DESC;

# 2020-12-30 17:26:17.147324
+DROP TRIGGER IF EXISTS TRIGGER_insert_qa_update_counts ON qas;

# 2020-12-31 12:48:01.722308
+CREATE UNIQUE INDEX proba ON qas (answer_version_id, question_version_id) WHERE deleted_at IS NULL;

# 2020-12-31 12:48:11.611649
+CREATE TRIGGER TRIGGER_update_qa_update_counts AFTER
+UPDATE OF deleted_at ON qas
+FOR EACH ROW EXECUTE PROCEDURE update_qa_answer_question_count();

# 2020-12-31 12:49:57.199283
+SELECT question_count FROM answers WHERE version_id = 89187;

# 2020-12-31 12:50:31.591849
+CREATE TRIGGER TRIGGER_insert_qa_update_counts AFTER
+INSERT ON qas
+FOR EACH ROW EXECUTE PROCEDURE insert_qa_answer_question_count();

# 2020-12-31 12:53:07.387730
+\d+

# 2020-12-31 12:53:19.041143
+\d latest_qas

# 2020-12-31 12:53:25.614354
+\d+ latest_qas

# 2020-12-31 12:54:22.043477
+CREATE UNIQUE INDEX qaid_idx ON qas (qa_id, version);

# 2020-12-31 12:55:00.969952
+\d+ qas

# 2020-12-31 12:55:53.778156
+CREATE OR REPLACE FUNCTION calculate_question_count(vid int) RETURNS int AS $$
+    BEGIN
+        RETURN (SELECT count(*) FROM content.qas WHERE answer_version_id = vid);
+    END;
+$$ LANGUAGE plpgsql;

# 2021-01-04 13:51:22.488437
+SELECT * FROM knowledge_bases;

# 2021-01-04 17:00:26.184697
+SELECT * FROM answer LIMIT 1;

# 2021-01-04 17:00:29.106300
+SELECT * FROM answers LIMIT 1;

# 2021-01-04 17:00:42.329447
+SELECT count(*) FROM qas WHERE answer_version_id = 14237;

# 2021-01-04 17:00:49.755676
+EXPLAIN SELECT count(*) FROM qas WHERE answer_version_id = 14237;

# 2021-01-04 17:01:08.480078
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_version_id = 14237;

# 2021-01-04 17:01:21.048919
+SELECT * FROM answers LIMIT 1;

# 2021-01-04 17:01:33.659042
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_version_id = 14237 AND knowledge_base_id = 9;

# 2021-01-04 17:01:42.960669
+EXPLAIN ANALYZE SELECT count(*) FROM latest_qas WHERE answer_version_id = 14237 AND knowledge_base_id = 9;

# 2021-01-04 17:01:47.431827
+EXPLAIN ANALYZE SELECT count(*) FROM latest_qas WHERE answer_version_id = 14237;

# 2021-01-04 17:01:58.222808
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_version_id = 14237;

# 2021-01-04 17:03:06.468557
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:03:59.374761
+SELECT count(*) FROM qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:04:05.407953
+SELECT count(*) FROM latest_qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:04:08.737896
+SELECT count(*) FROM qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:04:13.922315
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:05:20.472901
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_version_id = 14237;

# 2021-01-04 17:05:36.095271
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:05:43.971577
+EXPLAIN ANALYZE SELECT count(*) FROM latest_qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:06:56.261888
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:11:27.993060
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE qa_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:11:39.612196
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE deleted_at IS NULL;

# 2021-01-04 17:11:47.867121
+\d+ qas

# 2021-01-04 17:12:11.148465
+EXPLAIN ANALYZE SELECT count(*) FROM answer_origin = 'production' AND deleted_at IS NULL;

# 2021-01-04 17:12:18.629770
+EXPLAIN ANALYZE SELECT count(*) FROM WHERE answer_origin = 'production' AND deleted_at IS NULL;

# 2021-01-04 17:12:28.531956
+\dT+ answer_origin_type

# 2021-01-04 17:12:36.014619
+EXPLAIN ANALYZE SELECT count(*) FROM WHERE answer_origin = 'MODEL' AND deleted_at IS NULL;

# 2021-01-04 17:12:41.207833
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_origin = 'MODEL' AND deleted_at IS NULL;

# 2021-01-04 17:13:03.452883
+EXPLAIN ANALYZE SELECT count(*) FROM qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:13:50.965689
+SELECT count(*) FROM qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:13:57.883180
+SELECT count(*) FROM qas WHERE answer_origin = 'MODEL' AND deleted_at IS NULL;

# 2021-01-04 17:15:20.523086
+SELECT count(*) FROM latest_qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-04 17:15:27.580055
+SELECT count(*) FROM qas WHERE answer_origin = 'MODEL' AND deleted_at IS NULL;

# 2021-01-05 10:36:19.258224
+SELECT count(*) FROM latest_qas WHERE answer_version_id = 14237 AND deleted_at IS NULL;

# 2021-01-05 10:36:28.388700
+\d+ latest_qas

# 2021-01-05 10:36:41.015775
+\d+ qas

# 2021-01-05 10:36:58.265996
+\d+ latest_qas

# 2021-01-05 10:37:10.484891
+SELECT DISTINCT ON (qas.qa_id) qas.version_id,
+    qas.created_at,
+    qas.updated_at,
+    qas.deleted_at,
+    qas.qa_id,
+    qas.version,
+    qas.answer_version_id,
+    qas.question_version_id,
+    qas.label_method,
+    qas.answer_origin,
+    qas.label_method_event
+   FROM qas
+  WHERE qas.deleted_at IS NULL;

# 2021-01-05 10:37:37.962250
+SELECT DISTINCT ON (qas.qa_id) qas.version_id,
+    qas.created_at,
+    qas.updated_at,
+    qas.deleted_at,
+    qas.qa_id,
+    qas.version,
+    qas.answer_version_id,
+    qas.question_version_id,
+    qas.label_method,
+    qas.answer_origin,
+    qas.label_method_event
+   FROM qas
+  WHERE qas.deleted_at IS NULL
+  ORDER BY qas.qa_id, qas.version DESC;

# 2021-01-05 10:37:46.843999
+SELECT DISTINCT ON (qas.qa_id) qas.version_id,
+    qas.created_at,
+    qas.updated_at,
+    qas.deleted_at,
+    qas.qa_id,
+    qas.version,
+    qas.answer_version_id,
+    qas.question_version_id,
+    qas.label_method,
+    qas.answer_origin,
+    qas.label_method_event
+   FROM qas
+  WHERE qas.deleted_at IS NULL
+  ORDER BY qas.version DESC;

# 2021-01-05 10:38:31.700930
+EXPLAIN ANALYZE SELECT DISTINCT ON (qas.qa_id) qas.version_id,
+    qas.created_at,
+    qas.updated_at,
+    qas.deleted_at,
+    qas.qa_id,
+    qas.version,
+    qas.answer_version_id,
+    qas.question_version_id,
+    qas.label_method,
+    qas.answer_origin,
+    qas.label_method_event
+   FROM qas
+  WHERE qas.deleted_at IS NULL
+  ORDER BY qas.qa_id, qas.version DESC;

# 2021-01-05 10:39:21.044910
+EXPLAIN ANALYZE SELECT * FROM qas WHERE qas.deleted_at IS NULL;

# 2021-01-05 10:50:17.413457
+\d

# 2021-01-05 10:50:23.030410
+\?

# 2021-01-05 10:50:33.175492
+\df

# 2021-01-05 10:50:55.085639
+\df+ sd_cascade_answers

# 2021-01-05 10:51:54.934294
+\df+ sd_cascade_qas

# 2021-01-05 12:40:25.388032
+SELECT count(*) FROM latest_qas GROUP BY answer_version_id;

# 2021-01-05 12:40:31.574255
+SELECT answer_version_id, count(*) FROM latest_qas GROUP BY answer_version_id;

# 2021-01-05 12:41:14.813324
+SELECT answer_version_id, count(*) FROM latest_qas GROUP BY answer_version_id WHERE answer_version_id = 100;

# 2021-01-05 12:41:25.089466
+SELECT answer_version_id, count(*) FROM latest_qas WHERE answer_version_id = 1GROUP BY answer_version_id;

# 2021-01-05 12:41:30.434613
+SELECT answer_version_id, count(*) FROM latest_qas GROUP BY answer_version_id;

# 2021-01-05 12:41:37.139702
+SELECT answer_version_id, count(*) FROM latest_qas WHERE answer_version_id = 11719 GROUP BY answer_version_id;

# 2021-01-05 12:41:45.113871
+EXPLAIN ANALYZE SELECT answer_version_id, count(*) FROM latest_qas WHERE answer_version_id = 11719 GROUP BY answer_version_id;

# 2021-01-05 12:42:42.601326
+SELECT answer_version_id, count(*) FROM latest_qas GROUP BY answer_version_id;

# 2021-01-05 12:42:46.560023
+SELECT answer_version_id, count(*) FROM latest_qas GROUP BY answer_version_id ORDER BY count;

# 2021-01-05 12:42:49.681316
+SELECT answer_version_id, count(*) FROM latest_qas GROUP BY answer_version_id ORDER BY count DESC;

# 2021-01-05 12:43:26.424218
+SELECT * FROM answers WHERE version_id = 7797;

# 2021-01-05 12:43:42.798128
+SELECT answer_version_id, count(*) FROM latest_qas GROUP BY answer_version_id ORDER BY count DESC;

# 2021-01-05 13:15:34.934683
+CREATE OR REPLACE VIEW question_count AS SELECT answer_version_id, count(*) FROM latest_qas GROUP BY answer_version_id;

# 2021-01-05 13:15:43.784336
+SELECT * FROM question_count;

# 2021-01-05 13:17:50.351915
+SELECT version_id, answer_id FROM answers JOIN question_count on question_count.answer_version_id=answers.version_id;

# 2021-01-05 13:17:59.963598
+SELECT version_id, answer_id, count FROM answers JOIN question_count on question_count.answer_version_id=answers.version_id;

# 2021-01-05 13:18:09.832220
+SELECT version_id, answer_id, count FROM answers JOIN question_count on question_count.answer_version_id=answers.version_id WHERE count > 100;

# 2021-01-05 13:18:21.745531
+SELECT version_id, answer_id, count FROM answers JOIN question_count on question_count.answer_version_id=answers.version_id WHERE count > 100 ORDER BY answer_id;

# 2021-01-05 13:18:27.989107
+SELECT version_id, answer_id, count FROM answers JOIN question_count on question_count.answer_version_id=answers.version_id WHERE count > 100 ORDER BY count;

# 2021-01-05 13:18:30.491110
+SELECT version_id, answer_id, count FROM answers JOIN question_count on question_count.answer_version_id=answers.version_id WHERE count > 100 ORDER BY count DESC;

# 2021-01-05 13:23:19.959030
+SELECT * FROM content.answer_count

# 2021-01-05 13:23:28.632878
+SELECT * FROM content.answer_count;

# 2021-01-05 13:23:36.040368
+SELECT * FROM content.answer_count ORDER BY count DESC;

# 2021-01-05 13:23:50.619072
+SELECT * FROM content.question_count ORDER BY count DESC;

# 2021-01-05 13:24:03.792722
+\dt+ question_count

# 2021-01-05 13:24:06.554498
+\d question_count

# 2021-01-05 13:24:09.387910
+\d+ question_count

# 2021-01-05 13:24:37.999698
+\d+ content.question_count

# 2021-01-05 13:27:03.614904
+SELECT version_id, answer_id, count FROM answers JOIN content.question_count on question_count.answer_version_id=answers.version_id;

# 2021-01-05 13:27:25.677791
+SELECT version_id, answer_id, count FROM answers JOIN content.question_count on content.question_count.answer_version_id=answers.version_id;

# 2021-01-05 13:27:44.377947
+DROP VIEW question_count;

# 2021-01-05 13:27:55.336669
+SELECT version_id, answer_id, count FROM answers JOIN question_count on question_count.answer_version_id=answers.version_id;

# 2021-01-05 13:28:03.378149
+\d+

# 2021-01-05 13:28:47.958681
+SELECT version_id, answer_id, count FROM answers JOIN question_count on question_count.version_id=answers.version_id;

# 2021-01-05 13:28:55.520823
+SELECT answers.version_id, answer_id, count FROM answers JOIN question_count on question_count.version_id=answers.version_id;

# 2021-01-05 13:29:03.329745
+SELECT answers.version_id, answer_id, count FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE count > 5;

# 2021-01-05 13:29:06.559438
+SELECT answers.version_id, answer_id, count FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE count > 10;

# 2021-01-05 13:36:18.219335
+EXPLAIN ANALYZE SELECT answers.version_id, answer_id, count FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE count > 10;

# 2021-01-05 13:36:28.834758
+EXPLAIN ANALYZE SELECT answers.version_id, answer_id FROM answers;

# 2021-01-05 13:37:11.682059
+SELECT answers.version_id, answer_id FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE count > 10;

# 2021-01-05 13:40:11.687272
+SELECT answers.version_id, answer_id FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE count > 10 ORDER BY count DESC;

# 2021-01-05 13:40:38.725264
+SELECT answers.version_id, answer_id FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE count > 10;

# 2021-01-05 14:30:17.993345
+SELECT \"latest_answers\".* FROM \"latest_answers\" JOIN question_count on question_count.version_id=latest_answers.version_id WHERE \"latest
+_answers\".\"deleted_at\" IS NULL AND ((count \u003e= ('10')) AND (count \u003c ('20')) AND (\"latest_answers\".\"knowledge_base_id\" = '1'));

# 2021-01-05 14:32:01.596113
+SELECT latest_answers.* FROM latest_answers JOIN question_count on question_count.version_id=latest_answers.version_id WHERE latest_answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (latest_answers.knowledge_base_id = '1'));

# 2021-01-05 14:32:08.560058
+EXPLAIN ANALYZE SELECT latest_answers.* FROM latest_answers JOIN question_count on question_count.version_id=latest_answers.version_id WHERE latest_answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (latest_answers.knowledge_base_id = '1'));

# 2021-01-05 14:33:00.534706
+EXPLAIN ANALYZE SELECT answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1'));

# 2021-01-05 14:33:12.439067
+EXPLAIN ANALYZE SELECT latest_answers.* FROM latest_answers JOIN question_count on question_count.version_id=latest_answers.version_id WHERE latest_answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (latest_answers.knowledge_base_id = '1'));

# 2021-01-05 14:33:16.498158
+EXPLAIN ANALYZE SELECT answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1'));

# 2021-01-05 14:33:19.504512
+EXPLAIN ANALYZE SELECT latest_answers.* FROM latest_answers JOIN question_count on question_count.version_id=latest_answers.version_id WHERE latest_answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (latest_answers.knowledge_base_id = '1'));

# 2021-01-05 14:33:37.377843
+EXPLAIN ANALYZE SELECT answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1'));

# 2021-01-05 14:33:38.679502
+EXPLAIN ANALYZE SELECT latest_answers.* FROM latest_answers JOIN question_count on question_count.version_id=latest_answers.version_id WHERE latest_answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (latest_answers.knowledge_base_id = '1'));

# 2021-01-05 14:33:52.826368
+\d+ latest_answers

# 2021-01-05 14:43:44.859278
+EXPLAIN ANALYZE SELECT answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1'));

# 2021-01-05 14:44:06.625855
+EXPLAIN ANALYZE SELECT answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) DISTINCT(answer_id) ORDER BY version;

# 2021-01-05 14:44:16.282216
+\d+ latest_answers

# 2021-01-05 14:44:45.509469
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id), answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) DISTINCT(answer_id) ORDER BY version;

# 2021-01-05 14:45:00.908107
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) DISTINCT(answer_id) ORDER BY version;

# 2021-01-05 14:45:19.351229
+SELECT DISTINCT ON (answers.answer_id) FROM answers;

# 2021-01-05 14:45:33.324636
+SELECT DISTINCT ON (answers.answer_id) FROM answers ORDER BY answers.answer_id;

# 2021-01-05 14:45:43.201643
+SELECT DISTINCT ON (answers.answer_id) * FROM answers ORDER BY answers.answer_id;

# 2021-01-05 14:46:04.528729
+SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers ORDER BY answers.answer_id LIMIT 1;

# 2021-01-05 14:46:10.210998
+SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers ORDER BY answers.version;

# 2021-01-05 14:46:51.384924
+SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers ORDER BY answers.answer_id;

# 2021-01-05 14:47:15.522034
+SELECT DISTINCT ON (answers.answer_id) answers.answer_id, answers.version FROM answers ORDER BY answers.answer_id, answers.version;

# 2021-01-05 14:47:22.179714
+SELECT DISTINCT ON (answers.answer_id) answers.answer_id, answers.version FROM answers ORDER BY answers.answer_id, answers.version DESC;

# 2021-01-05 14:47:37.168122
+SELECT DISTINCT ON (answers.answer_id) answers.answer_id, answers.version FROM answers ORDER BY answers.version DESC;

# 2021-01-05 14:47:38.654480
+SELECT DISTINCT ON (answers.answer_id) answers.answer_id, answers.version FROM answers ORDER BY answers.answer_id, answers.version DESC;

# 2021-01-05 14:48:00.466788
+SELECT DISTINCT ON (answers.answer_id) answers.answer_id, answers.version FROM answers WHERE knowledge_base_id = 1 ORDER BY answers.answer_id, answers.version DESC;

# 2021-01-05 14:49:50.752375
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id), answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC;

# 2021-01-05 14:50:02.810502
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC;

# 2021-01-05 14:53:49.003038
+EXPLAIN ANALYZE SELECT latest_answers.* FROM latest_answers JOIN question_count on question_count.version_id=latest_answers.version_id WHERE latest_answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (latest_answers.knowledge_base_id = '1'));

# 2021-01-05 14:56:07.599106
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC;

# 2021-01-05 15:24:29.644109
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id), answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC;

# 2021-01-05 15:24:35.997175
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC;

# 2021-01-05 15:26:19.615887
+EXPLAIN ANALYZE SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers ORDER BY answers.answer_id, answers.version DESC) AS latest JOIN question_count on question_count.version_id=latest.version_id WHERE latest.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (latest.knowledge_base_id = '1'));

# 2021-01-05 15:27:31.786618
+EXPLAIN ANALYZE SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC);

# 2021-01-05 15:28:19.133628
+EXPLAIN ANALYZE SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND (count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1') ORDER BY answers.answer_id, answers.version DESC);

# 2021-01-05 15:28:35.039678
+EXPLAIN ANALYZE SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND (count >= ('10')) AND (count <= ('20')) AND answers.knowledge_base_id = '1' ORDER BY answers.answer_id, answers.version DESC);

# 2021-01-05 15:28:45.993938
+EXPLAIN ANALYZE SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND (count >= ('10')) AND (count <= ('20')) AND answers.knowledge_base_id = '1' ORDER BY answers.answer_id, answers.version DESC) AS foo;

# 2021-01-05 15:38:54.129833
+SELECT * FROM (SELECT DISTINCT ON (answers.answer_id), answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC) JOIN unnest({'3,1,2'}::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2021-01-05 15:39:04.222680
+SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC) JOIN unnest({'3,1,2'}::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2021-01-05 15:39:26.869493
+SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC) AS foo JOIN unnest({'3,1,2'}::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2021-01-05 15:39:46.000315
+SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC) AS foo JOIN unnest({3,1,2}::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2021-01-05 15:40:12.413782
+SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC) AS foo JOIN unnest({'3','1','2'}::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2021-01-05 15:40:28.586816
+SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC) AS foo JOIN unnest({'3','1','2'}) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2021-01-05 15:40:59.638297
+SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC) AS foo JOIN unnest(ARRAY[{'3','1','2'}]::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2021-01-05 15:41:12.052608
+SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC) AS foo JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2021-01-05 15:41:26.589793
+EXPLAIN ANALYZE SELECT * FROM (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC) AS foo JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) ORDER BY x.order_nr;

# 2021-01-05 16:16:36.886602
+SELECT * FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answers.answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr

# 2021-01-05 16:16:39.800688
+SELECT * FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answers.answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:17:07.283378
+SELECT * FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answers.answer_id, order_nr) USING (.answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:17:13.875419
+SELECT * FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answers.answer_id, order_nr) USING (answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:17:24.366363
+SELECT * FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:18:56.996052
+SELECT * FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (subquery.answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:19:08.510009
+SELECT * FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:19:22.116470
+SELECT * FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(subquery.answer_id, order_nr) USING (answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:22:13.841280
+SELECT * FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answers.answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:22:25.563763
+SELECT answers.* FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answers.answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:22:46.982254
+SELECT answers.* FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) USING (answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:24:50.502300
+SELECT answers.* FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(order_answer_id, order_nr) USING (order_answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:25:02.933871
+SELECT answers.* FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(order_answer_id, order_nr) USING (answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:25:11.649747
+SELECT answers.* FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(order_answer_id, order_nr) USING (answers.answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:25:20.663930
+SELECT answers.* FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(order_answer_id, order_nr) USING (content.answers.answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:25:35.202568
+SELECT answers.* FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(order_answer_id, order_nr) USING (subquery.answer_id) WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:27:23.617166
+SELECT answers.* FROM answers INNER JOIN (SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers  WHERE (answers.answer_id IN ('3','1','2')) ORDER BY answers.answer_id, answers.version DESC) as subquery ON subquery.version_id = answers.version_id JOIN unnest(ARRAY['3','1','2']::int[]) WITH ORDINALITY AS x(answer_id, order_nr) ON x.answer_id = answers.answer_id WHERE answers.deleted_at IS NULL ORDER BY x.order_nr;

# 2021-01-05 16:57:11.165441
+\dt+ question_count

# 2021-01-05 16:57:15.374244
+\dt+ content.question_count

# 2021-01-05 16:57:18.571495
+\d+ content.question_count

# 2021-01-05 16:58:20.521387
+ SELECT answers.version_id,
+    count(DISTINCT latest_questions.version_id) AS count
+   FROM answers
+     JOIN qas ON answers.version_id = qas.answer_version_id
+     JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id;

# 2021-01-05 16:58:44.404412
+ SELECT answers.version_id,
+    coalesce(count(DISTINCT latest_questions.version_id),0) AS count
+   FROM answers
+     JOIN qas ON answers.version_id = qas.answer_version_id
+     JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id;

# 2021-01-05 16:59:11.653986
+SELECT * FROM ( SELECT answers.version_id,
+    coalesce(count(DISTINCT latest_questions.version_id),0) AS count
+   FROM answers
+     JOIN qas ON answers.version_id = qas.answer_version_id
+     JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id) WHERE count = 0;

# 2021-01-05 16:59:19.542410
+SELECT * FROM ( SELECT answers.version_id,
+    coalesce(count(DISTINCT latest_questions.version_id),0) AS count
+   FROM answers
+     JOIN qas ON answers.version_id = qas.answer_version_id
+     JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id) as sub WHERE count = 0;

# 2021-01-05 16:59:22.265602
+SELECT * FROM ( SELECT answers.version_id,
+    coalesce(count(DISTINCT latest_questions.version_id),0) AS count
+   FROM answers
+     JOIN qas ON answers.version_id = qas.answer_version_id
+     JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id) as sub WHERE count = 1;

# 2021-01-05 16:59:46.069216
+\d

# 2021-01-05 16:59:51.979861
+SELECT * FROM answers LIMIT 1;

# 2021-01-05 17:00:05.077156
+DELETE * FROM qas WHERE answer_version_id = 14237;

# 2021-01-05 17:00:12.042425
+DELETE FROM qas WHERE answer_version_id = 14237;

# 2021-01-05 17:00:27.313971
+UPDATE qas SET deleted_at = NOW() WHERE answer_version_id = 14237;

# 2021-01-05 17:00:35.172449
+SELECT * FROM ( SELECT answers.version_id,
+    coalesce(count(DISTINCT latest_questions.version_id),0) AS count
+   FROM answers
+     JOIN qas ON answers.version_id = qas.answer_version_id
+     JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id) as sub WHERE count = 0;

# 2021-01-05 17:01:16.010231
+SELECT * FROM qas WHERE answer_version_id = 14237;

# 2021-01-05 17:01:45.386585
+SELECT * FROM questions WHERE version_id IN (SELECT question_version_id FROM qas WHERE answer_version_id = 14237);

# 2021-01-05 17:02:06.750482
+SELECT * FROM answers WHERE version_id = 14237;

# 2021-01-05 17:02:32.840816
+SELECT * FROM ( SELECT answers.version_id,
+    coalesce(count(DISTINCT latest_questions.version_id),0) AS count
+   FROM answers
+     JOIN qas ON answers.version_id = qas.answer_version_id
+     JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id) as sub WHERE version_id = 14237;

# 2021-01-05 17:04:15.236481
+SELECT * FROM ( SELECT answers.version_id,
+    coalesce(count(DISTINCT latest_questions.version_id),0) AS count
+   FROM answers
+     LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+     LEFT JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id) as sub WHERE version_id = 14237;

# 2021-01-05 17:04:44.026621
+SELECT * FROM ( SELECT answers.version_id,
+    coalesce(count(DISTINCT latest_questions.version_id),0) AS count
+   FROM answers
+     LEFT OUTER JOIN qas ON answers.version_id = qas.answer_version_id
+     LEFT OUTER JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id) as sub WHERE version_id = 14237;

# 2021-01-05 17:05:49.530973
+SELECT * FROM ( SELECT answers.version_id,
+    coalesce(count(DISTINCT latest_questions.version_id),0) AS count
+   FROM answers
+     LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+     LEFT JOIN latest_questions ON qas.question_version_id = latest_questions.version_id
+  WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND latest_questions.data_source = 'ai_trainer'::data_source_type
+  GROUP BY answers.version_id) as sub WHERE version_id = 14237;

# 2021-01-05 17:06:05.871915
+SELECT * FROM answers WHERE version_id = 14237;

# 2021-01-05 17:07:56.802271
+SELECT answers.version_id,
+     coalesce(count(DISTINCT latest_qas.answer_version_id),0) AS count
+    FROM answers
+      LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+   WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL
+   GROUP BY answers.version_id;

# 2021-01-05 17:08:18.304482
+
+SELECT answers.version_id,
+     coalesce(count(DISTINCT qas.answer_version_id),0) AS count
+    FROM answers
+      LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+   WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL
+   GROUP BY answers.version_id
+

# 2021-01-05 17:08:58.823977
+SELECT answers.version_id,
+     coalesce(count(DISTINCT qas.answer_version_id),0) AS count
+    FROM answers
+      LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+   WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND answers.version_id = 14237
+   GROUP BY answers.version_id;

# 2021-01-05 17:09:16.631104
+SELECT answers.version_id,
+     coalesce(count(DISTINCT qas.answer_version_id),0) AS count
+    FROM answers
+      JOIN qas ON answers.version_id = qas.answer_version_id
+   WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL AND answers.version_id = 14237
+   GROUP BY answers.version_id;

# 2021-01-05 17:09:25.803194
+SELECT answers.version_id,
+     coalesce(count(DISTINCT qas.answer_version_id),0) AS count
+    FROM answers
+      JOIN qas ON answers.version_id = qas.answer_version_id
+   WHERE answers.deleted_at IS NULL AND answers.version_id = 14237
+   GROUP BY answers.version_id;

# 2021-01-05 17:16:09.673759
+SELECT * FROM answers LEFT JOIN latest_qas ON answers.version_id = qas.answer_version_id WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:16:22.780314
+SELECT * FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:16:51.811144
+SELECT answer_id FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:17:01.031891
+SELECT answer_id, latest_qas.version_id FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:17:09.657589
+SELECT answer_id, latest_qas.created_at FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:17:36.553145
+SELECT answer_id, count(*) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:17:41.924636
+SELECT answer_id, count(*) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 10;

# 2021-01-05 17:17:45.016509
+SELECT answer_id, count(*) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 100;

# 2021-01-05 17:17:47.959270
+SELECT answer_id, count(*) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:18:14.391087
+UPDATE qas SET deleted_at = NOW() WHERE answer_version_id = 1540;

# 2021-01-05 17:18:16.041763
+SELECT answer_id, count(*) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:19:16.571893
+SELECT answer_id, count(*) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN latest_qas ON answers.version_id = qas.answer_version_id LEFT JOIN latest_questions ON latest_qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:19:18.081495
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN latest_qas ON answers.version_id = qas.answer_version_id LEFT JOIN latest_questions ON latest_qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:19:34.025671
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id LEFT JOIN latest_questions ON latest_qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 1;

# 2021-01-05 17:19:40.982704
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id LEFT JOIN latest_questions ON latest_qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 2;

# 2021-01-05 17:19:46.142538
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id LEFT JOIN latest_questions ON latest_qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:20:05.177021
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id JOIN latest_questions ON latest_qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:20:13.203264
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers JOIN latest_qas ON answers.version_id = latest_qas.answer_version_id JOIN latest_questions ON latest_qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND latest_qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:20:53.404679
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers JOIN qas ON answers.version_id = qas.answer_version_id JOIN latest_questions ON qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:21:07.192635
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN qas ON answers.version_id = qas.answer_version_id JOIN latest_questions ON qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:21:16.127427
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN qas ON answers.version_id = qas.answer_version_id LEFT JOIN latest_questions ON qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND qas.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:21:49.663310
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN qas ON answers.version_id = qas.answer_version_id LEFT JOIN latest_questions ON qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:22:12.528092
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN qas ON answers.version_id = qas.answer_version_id LEFT JOIN latest_questions ON qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND latest_questions.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:22:24.179948
+SELECT * FROM qas WHERE answer_version_id = 1540;

# 2021-01-05 17:23:05.008510
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN qas WHERE deleted_at IS NULL ON answers.version_id = qas.answer_version_id LEFT JOIN latest_questions ON qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND latest_questions.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:23:26.203687
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN qas ON answers.version_id = qas.answer_version_id WHERE deleted_at IS NULL LEFT JOIN latest_questions ON qas.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL AND latest_questions.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:24:42.256480
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id WHERE deleted_at IS NULL LEFT JOIN latest_questions ON qas2.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-05 17:25:18.009807
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) FROM answers LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id LEFT JOIN latest_questions ON qas2.question_version_id = latest_questions.version_id WHERE answers.deleted_at IS NULL GROUP BY answers.version_id LIMIT 3;

# 2021-01-06 12:43:33.150126
+SELECT * FROM top_questions;

# 2021-01-06 12:43:53.580696
+SELECT * FROM top_questions WHERE url = 'https://ilva.dk/';

# 2021-01-06 12:45:10.171487
+SELECT * FROM execution_history;

# 2021-01-06 12:45:30.306065
+SELECT * FROM top_questions WHERE url = 'https://ilva.dk/';

# 2021-01-06 13:01:42.954373
+SELECT * FROM questions WHERE question = 'Hvornår har bolighuset åbent?';

# 2021-01-06 13:01:58.909240
+SELECT * FROM qas WHERE question_version_id IN (SELECT version_id FROM questions WHERE question = 'Hvornår har bolighuset åbent?');

# 2021-01-06 13:02:24.879969
+SELECT * FROM answers WHERE version_id IN (SELECT answer_version_id FROM latest_qas WHERE question_version_id IN (SELECT version_id FROM questions WHERE question = 'Hvornår har bolighuset åbent?'));

# 2021-01-06 13:02:40.350155
+SELECT * FROM answers WHERE answer_id = 7868;

# 2021-01-06 13:11:39.311546
+SELECT * FROM top_questions WHERE url = 'https://ilva.dk/';

# 2021-01-06 13:13:18.867725
+ls

# 2021-01-06 14:13:51.094402
+\d+

# 2021-01-06 14:14:07.537693
+\d+ question_count

# 2021-01-06 14:14:57.448455
+SELECT answers.version_id, count(DISTINCT latest_questions.version_id) 
+		FROM answers 
+		LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id 
+		LEFT JOIN latest_questions ON qas2.question_version_id = latest_questions.version_id 
+		WHERE answers.deleted_at IS NULL 
+		GROUP BY answers.version_id

# 2021-01-06 14:15:17.397580
+SELECT * FROM answers WHERE version_id = 3766;

# 2021-01-06 14:15:38.886592
+SELECT * FROM qas WHERE answer_version_id = 3766;

# 2021-01-06 14:15:54.881299
+	CREATE OR REPLACE VIEW content.question_count AS 
+	  SELECT answers.version_id, count(DISTINCT latest_questions.version_id) 
+		FROM answers 
+		LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id 
+		LEFT JOIN latest_questions ON qas2.question_version_id = latest_questions.version_id 
+		WHERE answers.deleted_at IS NULL 
+		GROUP BY answers.version_id;

# 2021-01-06 14:16:04.219982
+SELECT * FROM question_count WHERE count = 0;

# 2021-01-06 14:16:09.794799
+SELECT coint(*) FROM question_count WHERE count = 0;

# 2021-01-06 14:16:15.433215
+SELECT count(*) FROM question_count WHERE count = 0;

# 2021-01-06 14:16:21.981281
+SELECT count(*) FROM question_count WHERE count IS NOT 0;

# 2021-01-06 14:16:25.095187
+SELECT count(*) FROM question_count WHERE count != 0;

# 2021-01-06 14:16:52.343641
+SELECT answer_version_id FROM question_count WHERE count = 0;

# 2021-01-06 14:16:57.427351
+SELECT version_id FROM question_count WHERE count = 0;

# 2021-01-06 14:17:15.703550
+SELECT count(*) FROM qas WHERE answer_version_id IN (SELECT version_id FROM question_count WHERE count = 0);

# 2021-01-06 14:17:22.821074
+SELECT count(*) FROM qas WHERE answer_version_id IN (SELECT version_id FROM question_count WHERE count = 0) AND deleted_at IS NULL;

# 2021-01-06 14:17:30.583584
+SELECT count(*) FROM latesT_qas WHERE answer_version_id IN (SELECT version_id FROM question_count WHERE count = 0) AND deleted_at IS NULL;

# 2021-01-06 14:17:35.143228
+SELECT count(*) FROM latest_qas WHERE answer_version_id IN (SELECT version_id FROM question_count WHERE count = 0) AND deleted_at IS NULL;

# 2021-01-06 14:18:30.249927
+SELECT count(*) FROM answers WHERE version_id IN (SELECT version_id FROM question_count WHERE count = 0) AND deleted_at IS NULL;

# 2021-01-06 14:18:47.301139
+SELECT DISTINCT ON (knowledge_base_id) count(*) FROM answers WHERE version_id IN (SELECT version_id FROM question_count WHERE count = 0) AND deleted_at IS NULL;

# 2021-01-06 14:18:55.209478
+SELECT DISTINCT ON (knowledge_base_id) count(*) FROM answers WHERE version_id IN (SELECT version_id FROM question_count WHERE count = 0) AND deleted_at IS NULL GROUP BY knowledge_base_id;

# 2021-01-06 14:19:03.916951
+SELECT DISTINCT ON (knowledge_base_id), knowledge_base_id, count(*) FROM answers WHERE version_id IN (SELECT version_id FROM question_count WHERE count = 0) AND deleted_at IS NULL GROUP BY knowledge_base_id;

# 2021-01-06 14:19:08.190064
+SELECT DISTINCT ON (knowledge_base_id) knowledge_base_id, count(*) FROM answers WHERE version_id IN (SELECT version_id FROM question_count WHERE count = 0) AND deleted_at IS NULL GROUP BY knowledge_base_id;

# 2021-01-06 14:19:31.057328
+SELECT DISTINCT ON (knowledge_base_id) knowledge_base_id, count(*) FROM latest_answers WHERE version_id IN (SELECT version_id FROM question_count WHERE count = 0) AND deleted_at IS NULL GROUP BY knowledge_base_id;

# 2021-01-06 14:19:56.140200
+SELECT * FROM knowledge_bases;

# 2021-01-06 14:24:17.359310
+\d+ answer_count

# 2021-01-06 14:31:39.861160
+SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id, answers.version DESC

# 2021-01-06 14:31:52.444750
+SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id ASC, answers.version DESC

# 2021-01-06 14:32:12.357816
+SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id DESC, answers.version ASC

# 2021-01-06 14:32:27.295435
+SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id DESC, answers.version DESC

# 2021-01-06 14:32:36.588954
+SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id ASC, answers.version DESC

# 2021-01-06 14:32:47.255821
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id ASC, answers.version DESC

# 2021-01-06 14:32:59.361891
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1'))

# 2021-01-06 14:33:01.448443
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1')) ORDER BY answers.answer_id ASC, answers.version DESC

# 2021-01-06 14:33:02.925315
+EXPLAIN ANALYZE SELECT DISTINCT ON (answers.answer_id) answers.* FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= ('10')) AND (count <= ('20')) AND (answers.knowledge_base_id = '1'))

# 2021-01-06 15:52:03.964458
+SELECT * FROM question_count ORDER BY count;

# 2021-01-06 15:52:08.081293
+SELECT * FROM question_count ORDER BY count DESC;

# 2021-01-06 15:52:25.295137
+SELECT * FROM answers WHERE version_id = 7797;

# 2021-01-06 15:54:05.355202
+SELECT * FROM content.question_count ORDER BY count DESC;

# 2021-01-06 15:54:31.522037
+SELECT * FROM information_schema;

# 2021-01-06 15:54:35.950618
+SELECT * FROM migrations;

# 2021-01-06 15:54:39.211233
+\dt

# 2021-01-06 15:54:42.389624
+\d+

# 2021-01-06 15:55:03.153021
+SELECT * FROM question_count ORDER BY count DESC;

# 2021-01-06 15:57:32.049586
+SELECT * FROM migrations;

# 2021-01-06 15:57:47.798846
+DELETE FROM migrations WHERE id = 'm20210106';

# 2021-01-06 16:04:24.052339
+SELECT * FROM question_count ORDER BY count DESC;

# 2021-01-06 16:05:43.784077
+g s

# 2021-01-06 16:28:41.741314
+DELETE FROM migrations WHERE id = 'm20210106';

# 2021-01-06 16:40:58.821495
+SELECT count(*) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count >= '20') AND (answers.knowledge_base_id = 2);

# 2021-01-06 16:41:16.477439
+SELECT count(*) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2);

# 2021-01-06 16:41:51.854144
+SELECT DISTINCT ON (answers.answer_id) count(*) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) ORDER BY answers.answer_id ASC, answers.version DESC;

# 2021-01-06 16:42:10.444386
+SELECT DISTINCT ON (answers.answer_id) count(*) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id ORDER BY answers.answer_id ASC, answers.version DESC;

# 2021-01-06 16:42:16.335465
+SELECT DISTINCT ON (answers.answer_id) count(*) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id ORDER BY answers.answer_id ASC;

# 2021-01-06 16:43:10.218618
+SELECT DISTINCT ON (answers.answer_id) count(*) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id ORDER BY answers.answer_id ASC, version DESC;

# 2021-01-06 16:43:19.718048
+SELECT DISTINCT ON (answers.answer_id) count(*) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id, version ORDER BY answers.answer_id ASC, version DESC;

# 2021-01-06 16:43:36.368741
+SELECT DISTINCT ON (answers.answer_id) * FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id, version ORDER BY answers.answer_id ASC, version DESC;

# 2021-01-06 16:43:48.062315
+SELECT DISTINCT ON (answers.answer_id) answer_id, version FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id, version ORDER BY answers.answer_id ASC, version DESC;

# 2021-01-06 16:44:08.987485
+SELECT count(DISTINCT ON (answers.answer_id) answer_id, version) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id, version ORDER BY answers.answer_id ASC, version DESC;

# 2021-01-06 16:44:39.059323
+SELECT DISTINCT ON (answers.answer_id) answer_id, version FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id, version ORDER BY answers.answer_id ASC, version DESC;

# 2021-01-06 16:45:34.598585
+SELECT count(DISTINCT answers.answer_id) answer_id, version FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id, version ORDER BY answers.answer_id ASC, version DESC;

# 2021-01-06 16:45:51.581097
+SELECT count(DISTINCT answers.answer_id) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2) GROUP BY answer_id, version ORDER BY answers.answer_id ASC, version DESC;

# 2021-01-06 16:46:16.656948
+SELECT count(DISTINCT answers.answer_id) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2);

# 2021-01-06 16:47:03.430138
+SELECT count(DISTINCT answers.answer_id ORDER BY answers.answer_id ASC) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2);

# 2021-01-06 16:47:15.597041
+SELECT count(DISTINCT answers.answer_id ORDER BY answers.answer_id ASC, answers.version DESC) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2);

# 2021-01-06 16:47:43.199618
+SELECT count(DISTINCT answers.answer_id, answer.version ORDER BY answers.answer_id ASC, answers.version DESC) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2);

# 2021-01-06 16:47:48.273487
+SELECT count(DISTINCT answers.answer_id, answers.version ORDER BY answers.answer_id ASC, answers.version DESC) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2);

# 2021-01-06 16:48:27.001103
+SELECT count(DISTINCT answers.answer_id ORDER BY answers.answer_id ASC, answers.version DESC) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2);

# 2021-01-06 16:48:43.285601
+SELECT count(DISTINCT answers.answer_id) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE (count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = 2);

# 2021-01-06 16:53:56.125627
+SELECT count(DISTINCT answers.answer_id) FROM answers;

# 2021-01-06 16:56:01.055750
+SELECT count(DISTINCT answers.answer_id) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = '2')) ORDER BY answers.answer_id ASC,answers.version DESC;

# 2021-01-06 16:56:17.481479
+SELECT count(DISTINCT answers.answer_id) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = '2'));

# 2021-01-07 10:36:54.289861
+\dt copilot_answers

# 2021-01-07 10:37:01.871619
+\d+ copilot_conversations

# 2021-01-07 12:34:19.462208
+CREATE OR REPLACE MATERIALIZED VIEW content.question_count AS
+	  SELECT answers.version_id,
+				count(DISTINCT latest_ai_questions.version_id) AS count
+			FROM answers
+				LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+				LEFT JOIN (SELECT * FROM latest_questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+			WHERE answers.deleted_at IS NULL
+			GROUP BY answers.version_id;

# 2021-01-07 12:34:45.548558
+DROP VIEW content.question_count;

# 2021-01-07 12:34:52.323573
+CREATE OR REPLACE MATERIALIZED VIEW content.question_count AS
+	  SELECT answers.version_id,
+				count(DISTINCT latest_ai_questions.version_id) AS count
+			FROM answers
+				LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+				LEFT JOIN (SELECT * FROM latest_questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+			WHERE answers.deleted_at IS NULL
+			GROUP BY answers.version_id;

# 2021-01-07 12:35:11.578944
+CREATE MATERIALIZED VIEW content.question_count AS
+	  SELECT answers.version_id,
+				count(DISTINCT latest_ai_questions.version_id) AS count
+			FROM answers
+				LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+				LEFT JOIN (SELECT * FROM latest_questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+			WHERE answers.deleted_at IS NULL
+			GROUP BY answers.version_id;

# 2021-01-07 12:36:47.990273
+REFRESH MATERIALIZED VIEW CONCURRENTLY content.question_count;

# 2021-01-07 12:37:53.866089
+CREATE UNIQUE INDEX avid_idx ON content.question_count (version_id);

# 2021-01-07 12:37:55.754952
+REFRESH MATERIALIZED VIEW CONCURRENTLY content.question_count;

# 2021-01-07 12:59:00.183795
+VACUUM;

# 2021-01-07 13:01:47.182184
+\d

# 2021-01-07 13:01:49.740375
+\d+

# 2021-01-07 13:01:56.182812
+\+

# 2021-01-07 13:01:57.744158
+\

# 2021-01-07 13:01:59.382607
+\?

# 2021-01-07 13:02:03.689964
+\dT+

# 2021-01-07 13:02:04.991143
+\dT

# 2021-01-07 13:02:07.580023
+\dt

# 2021-01-07 13:02:08.926388
+\dt+

# 2021-01-07 13:02:13.692715
+\d?

# 2021-01-07 13:02:15.612672
+\?

# 2021-01-07 13:02:30.797052
+\dsx

# 2021-01-07 13:02:31.983095
+\dx

# 2021-01-07 13:02:45.646979
+\l

# 2021-01-07 13:02:55.728103
+\timing

# 2021-01-07 13:03:04.492926
+\x

# 2021-01-07 13:03:08.653329
+SELECT count(DISTINCT answers.answer_id) FROM answers JOIN question_count on question_count.version_id=answers.version_id WHERE answers.deleted_at IS NULL AND ((count >= '10') AND (count <= '20') AND (answers.knowledge_base_id = '2'));

# 2021-01-07 13:03:15.728904
+\x

# 2021-01-07 13:03:21.742850
+\conninfo

# 2021-01-07 13:03:25.255896
+\?

# 2021-01-07 13:03:56.594685
+\copy answers to answers.sql

# 2021-01-07 13:04:02.206152
+\copy answers to 'answers.sql'

# 2021-01-07 13:04:16.559587
+\df

# 2021-01-07 13:04:34.204978
+\e proba.sql

# 2021-01-07 13:05:02.841726
+SELECT count(*) FROM answers;

# 2021-01-07 13:05:07.765309
+\e proba.sql

# 2021-01-07 13:05:16.979946
+SELECT count(*) FROM answers;

# 2021-01-07 13:05:17.931837
+\e proba.sql

# 2021-01-07 13:05:19.891717
+SELECT count(*) FROM answers; megint!

# 2021-01-07 13:05:32.364889
+\?

# 2021-01-07 13:06:09.033105
+        SELECT timetable.job_add (
+                  task_name => 'question_count_update',
+                  task_function => $$REFRESH MATERIALIZED VIEW CONCURRENTLY content.question_count$$,
+                  client_name => NULL, -- any worker may execute
+                  task_type => 'SQL',
+                  by_cron => '* * * * *',
+                  by_minute => NULL,
+                  by_hour => NULL,
+                  by_day => NULL,
+                  by_month => NULL,
+                  by_day_of_week => NULL,
+                  max_instances => 1,
+                  live => TRUE,
+                  self_destruct => FALSE
+        );

# 2021-01-07 13:37:48.913320
+DROP MATERIALIZED VIEW content.question_count;

# 2021-01-07 13:38:11.737045
+CREATE VIEW content.question_count AS
+  SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+			LEFT JOIN (SELECT * FROM latest_questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL
+		GROUP BY answers.version_id;

# 2021-01-07 13:38:51.772525
+CREATE INDEX source_idx ON content.questions(data_source);

# 2021-01-07 13:40:05.275381
+CREATE OR REPLACE VIEW content.question_count AS
+  SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+			LEFT JOIN (SELECT * FROM questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL
+		GROUP BY answers.version_id;

# 2021-01-07 13:40:21.368624
+DROP INDEX source_idx;

# 2021-01-07 13:41:09.794508
+CREATE OR REPLACE VIEW content.question_count AS
+  SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+			LEFT JOIN (SELECT * FROM questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form'
+		GROUP BY answers.version_id;

# 2021-01-07 13:42:07.262484
+CREATE OR REPLACE VIEW content.question_count AS
+  SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+			LEFT JOIN (SELECT * FROM latest_questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form'
+		GROUP BY answers.version_id;

# 2021-01-07 13:43:32.264940
+CREATE OR REPLACE VIEW content.question_count AS
+  SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+			LEFT JOIN (SELECT DISTINCT ON (question_id) * FROM questions WHERE data_source = 'ai_trainer' ORDER BY question_id, version DESC) as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form'
+		GROUP BY answers.version_id;

# 2021-01-07 13:44:06.806394
+CREATE OR REPLACE VIEW content.question_count AS
+  SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN (SELECT * FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+			LEFT JOIN (SELECT DISTINCT ON (question_id) * FROM questions WHERE data_source = 'ai_trainer' AND deleted_at IS NULL ORDER BY question_id, version DESC) as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form'
+		GROUP BY answers.version_id;

# 2021-01-07 13:45:04.562797
+CREATE OR REPLACE VIEW content.question_count AS
+  SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN (SELECT qas.answer_version_id, qas.question_version_id FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+			LEFT JOIN (SELECT DISTINCT ON (question_id) * FROM questions WHERE data_source = 'ai_trainer' AND deleted_at IS NULL ORDER BY question_id, version DESC) as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form'
+		GROUP BY answers.version_id;

# 2021-01-07 13:45:28.027262
+CREATE OR REPLACE VIEW content.question_count AS
+  SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN (SELECT qas.answer_version_id, qas.question_version_id FROM qas WHERE deleted_at IS NULL) as qas2 ON answers.version_id = qas2.answer_version_id
+			LEFT JOIN (SELECT DISTINCT ON (question_id) version_id FROM questions WHERE data_source = 'ai_trainer' AND deleted_at IS NULL ORDER BY question_id, version DESC) as latest_ai_questions ON qas2.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form'
+		GROUP BY answers.version_id;

# 2021-01-07 14:45:08.404405
+EXPLAIN ANALYZE SELECT * FROM latest_answers;

# 2021-01-07 14:45:14.220826
+EXPLAIN ANALYZE SELECT * FROM answers;

# 2021-01-07 14:45:29.988306
+EXPLAIN ANALYZE SELECT * FROM answers WHERE source_url IS NOT NULL;

# 2021-01-07 17:07:44.250623
+SELECT count(*) FROM answers WHERE read_only = FALSE;

# 2021-01-07 17:07:47.363037
+SELECT count(*) FROM answers WHERE read_only = TRUE;

# 2021-01-07 17:07:49.661674
+SELECT count(*) FROM answers WHERE read_only = false;

# 2021-01-07 17:07:52.091175
+SELECT count(*) FROM answers WHERE read_only = true;

# 2021-01-07 17:07:55.729964
+SELECT count(*) FROM answers WHERE read_only IS NULL;

# 2021-01-07 17:07:59.387956
+SELECT count(*) FROM answers WHERE read_only NOT NULL;

# 2021-01-07 17:08:03.181492
+SELECT count(*) FROM answers WHERE read_only IS NOT NULL;

# 2021-01-07 17:09:43.000144
+SELECT * FROM answers WHERE read_only IS NULL LIMIT 1

# 2021-01-07 17:09:58.063531
+UPDATE answers SET read_only = TRUE WHERE version_id = 14237;

# 2021-01-07 17:10:04.873706
+SELECT count(*) FROM answers WHERE read_only = true;

# 2021-01-07 17:10:08.785834
+SELECT count(*) FROM answers WHERE read_only = TRUE;

# 2021-01-07 18:04:50.676955
+DELETE FROM migrations WHERE id = 'm20210106';

# 2021-01-11 09:09:58.421289
+\d

# 2021-01-11 09:10:05.675247
+\d?

# 2021-01-11 09:10:06.828442
+\?

# 2021-01-11 09:10:12.597607
+\df+

# 2021-01-11 09:10:15.077258
+\df

# 2021-01-11 09:10:20.675516
+\df sd_cascade_qas

# 2021-01-11 09:10:23.568570
+\df+ sd_cascade_qas

# 2021-01-11 12:02:11.724647
+SELECT * FROM qas LIMIT 1;

# 2021-01-11 12:02:37.422781
+SELECT * FROM latest_qas LIMIT 1;

# 2021-01-11 12:02:53.508677
+UPDATE (SELECT DISTINCT ON (qa_id) * FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL ORDER BY version DESC) SET latest = TRUE;

# 2021-01-11 12:06:19.981378
+UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT DISTINCT ON (qa_id) version_id FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL ORDER BY version DESC) SET latest = TRUE;

# 2021-01-11 12:06:24.518919
+UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT DISTINCT ON (qa_id) version_id FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL ORDER BY version DESC);

# 2021-01-11 12:06:35.849981
+UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT DISTINCT ON (qa_id) version_id FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL ORDER BY qa_id, version DESC);

# 2021-01-11 12:06:44.873518
+EXPLAIN ANALYZE UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT DISTINCT ON (qa_id) version_id FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL ORDER BY qa_id, version DESC);

# 2021-01-11 12:07:52.010688
+EXPLAIN ANALYZE UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT DISTINCT ON (qa_id) version_id FROM (SELECT version_id, version FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL) WHERE ORDER BY version DESC);

# 2021-01-11 12:08:27.508587
+EXPLAIN ANALYZE UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT version_id FROM (SELECT version_id, version FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL) WHERE ORDER BY version DESC LIMIT 1);

# 2021-01-11 12:09:11.793947
+EXPLAIN ANALYZE UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT version_id FROM (SELECT version_id, version FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL) as filtered_qas WHERE ORDER BY version DESC LIMIT 1);

# 2021-01-11 12:09:29.934295
+EXPLAIN ANALYZE UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT version_id FROM (SELECT version_id, version FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL) as filtered_qas WHERE ORDER BY filtered_qas.version DESC LIMIT 1);

# 2021-01-11 12:09:36.349601
+EXPLAIN ANALYZE UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT version_id FROM (SELECT version_id, version FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL) as filtered_qas ORDER BY filtered_qas.version DESC LIMIT 1);

# 2021-01-11 12:10:24.392229
+EXPLAIN ANALYZE UPDATE qas SET latest = TRUE WHERE version_id IN (SELECT DISTINCT ON (qa_id) version_id FROM qas WHERE qa_id = 5045 AND deleted_at IS NULL ORDER BY qa_id, version DESC);

# 2021-01-11 14:46:15.961451
+SELECT count(*) FROM answers WHERE knowledge_base_id = 2;

# 2021-01-11 14:47:32.566462
+SELECT * FROM topics WHERE JOIN topics_answers ON topics_answers.topic_id = topics.id;

# 2021-01-11 14:47:52.645310
+SELECT * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id;

# 2021-01-11 14:49:14.191304
+SELECT * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2);

# 2021-01-11 14:49:52.634010
+SELECT * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2 AND type = 'short_form' AND deleted_at IS NULL);

# 2021-01-11 14:50:05.198552
+SELECT DISTINCT(topics.id) * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2 AND type = 'short_form' AND deleted_at IS NULL);

# 2021-01-11 14:50:15.097257
+SELECT DISTINCT ON (topics.id) * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2 AND type = 'short_form' AND deleted_at IS NULL);

# 2021-01-11 14:50:32.451680
+SELECT * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2);

# 2021-01-11 14:50:44.746041
+SELECT DISTINCT ON (topics.id) * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2 AND deleted_at IS NULL);

# 2021-01-11 14:51:01.629311
+SELECT DISTINCT ON (topics.id) * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2 AND type = 'short_form' AND deleted_at IS NULL);

# 2021-01-11 14:51:34.012628
+SELECT DISTINCT ON (topics.id) * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics.deletd_at IS NULL AND topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2 AND type = 'short_form' AND deleted_at IS NULL);

# 2021-01-11 14:51:42.174317
+SELECT DISTINCT ON (topics.id) * FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics.deleted_at IS NULL AND topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2 AND type = 'short_form' AND deleted_at IS NULL);

# 2021-01-11 14:52:37.101747
+SELECT * FROM topics WHERE knowledge_base_id = 2 AND id NOT IN (SELECT DISTINCT ON (topics.id) topics.id FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics.deleted_at IS NULL AND topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2 AND type = 'short_form' AND deleted_at IS NULL));

# 2021-01-11 14:52:48.485075
+SELECT * FROM topics WHERE deleted_at IS NULL AND knowledge_base_id = 2 AND id NOT IN (SELECT DISTINCT ON (topics.id) topics.id FROM topics JOIN topics_answers ON topics_answers.topic_id = topics.id WHERE topics.deleted_at IS NULL AND topics_answers.answer_version_id IN (SELECT version_id FROM answers WHERE knowledge_base_id = 2 AND type = 'short_form' AND deleted_at IS NULL));

# 2021-01-11 15:46:18.659938
+UPDATE content.answers SET latest = TRUE WHERE version_id IN (SELECT DISTINCT ON (answer_id) answers.version_id FROM answers ORDER BY answer_id, version DESC);

# 2021-01-11 15:51:43.726062
+	CREATE OR REPLACE VIEW content.short_form_question_count AS
+		SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+			LEFT JOIN (SELECT version_id FROM latest_questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON latest_qas.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form' AND latest = TRUE
+		GROUP BY answers.version_id;

# 2021-01-11 15:51:57.533312
+	CREATE OR REPLACE VIEW content.short_form_question_count AS
+		SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+			LEFT JOIN (SELECT version_id FROM latest_questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON qas.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form' AND latest = TRUE
+		GROUP BY answers.version_id;

# 2021-01-11 15:52:58.478843
+SELECT pg_terminate_backend(pg_stat_activity.pid)
+FROM pg_stat_activity
+WHERE pg_stat_activity.datname = 'account-content'
+  AND pid <> pg_backend_pid();
+

# 2021-01-11 15:53:02.510739
+	CREATE OR REPLACE VIEW content.short_form_question_count AS
+		SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+			LEFT JOIN (SELECT version_id FROM latest_questions WHERE data_source = 'ai_trainer') as latest_ai_questions ON qas.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form' AND latest = TRUE
+		GROUP BY answers.version_id;

# 2021-01-11 15:56:04.531973
+	CREATE OR REPLACE VIEW content.short_form_question_count AS
+		SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+			LEFT JOIN (SELECT DISTINCT ON (question_id) version_id FROM questions WHERE data_source = 'ai_trainer' ORDER BY question_id, version DESC) as latest_ai_questions ON latest_qas.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form' AND latest = TRUE
+		GROUP BY answers.version_id;
+

# 2021-01-11 15:56:27.531138
+	CREATE OR REPLACE VIEW content.short_form_question_count AS
+		SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+			LEFT JOIN (SELECT DISTINCT ON (question_id) version_id FROM questions WHERE data_source = 'ai_trainer' ORDER BY question_id, version DESC) as latest_ai_questions ON qas.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form' AND latest = TRUE
+		GROUP BY answers.version_id;
+

# 2021-01-11 16:36:57.046420
+DELETE FROM migrations WHERE id = 'm20210106';

# 2021-01-11 16:38:26.196604
+ALTER TABLE answers DROP COLUMN latest;

# 2021-01-11 16:41:47.106024
+UPDATE content.answers SET latest = TRUE WHERE version_id IN (SELECT DISTINCT ON (answer_id) answers.version_id FROM answers ORDER BY answer_id, version DESC);

# 2021-01-11 16:43:50.959158
+\d

# 2021-01-11 16:43:56.437553
+\d+ short_form_question_count

# 2021-01-11 16:46:25.664000
+	CREATE OR REPLACE VIEW content.short_form_question_count AS
+		SELECT answers.version_id,
+			count(DISTINCT latest_ai_questions.version_id) AS count
+		FROM answers
+			LEFT JOIN qas ON answers.version_id = qas.answer_version_id
+			LEFT JOIN (SELECT DISTINCT ON (question_id) version_id FROM questions WHERE data_source = 'ai_trainer' AND deleted_at IS NULL ORDER BY question_id, version DESC) as latest_ai_questions  ON qas.question_version_id = latest_ai_questions.version_id
+		WHERE answers.deleted_at IS NULL AND answers.type = 'short_form' AND latest = TRUE
+		GROUP BY answers.version_id;
+

# 2021-01-11 17:51:51.962585
+SELECT * FROM answers WHERE version_id = 89249;

# 2021-01-11 18:13:53.425829
+\d+ answers

# 2021-01-11 18:31:07.277561
+SELECT * FROM topics WHERE knowledge_base_id = 1 AND deleted_at IS NOT  NULL;

# 2021-01-11 18:34:47.885924
+SELECT count(*) FROM answers WHERE type = 'long_form' AND deleted_at IS NULL AND title IS NULL;

# 2021-01-11 18:34:54.923068
+SELECT count(*) FROM answers WHERE type = 'long_form' AND deleted_at IS NULL AND title = "";

# 2021-01-11 18:34:57.277632
+SELECT count(*) FROM answers WHERE type = 'long_form' AND deleted_at IS NULL AND title = '';

# 2021-01-11 18:35:02.626148
+SELECT count(*) FROM answers WHERE type = 'long_form' AND deleted_at IS NULL AND title IS NOT NULL;

# 2021-01-12 09:34:25.218203
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-12 10:18:24.863573
+select percentile_disc(0.5) within group (order by answers.view) from answers;

# 2021-01-12 10:18:29.606243
+\d

# 2021-01-12 10:18:36.912192
+select percentile_disc(0.5) within group (order by views) from answers;

# 2021-01-12 10:18:46.101164
+SELECT * FROM views;

# 2021-01-12 10:18:50.845876
+SELECT * FROM answers;

# 2021-01-12 10:19:23.338992
+select percentile_disc(0.5) within group (order by views) from answers;

# 2021-01-12 10:19:29.540942
+select percentile_disc(2.5) within group (order by views) from answers;

# 2021-01-12 10:19:34.345692
+select percentile_disc(0.5) within group (order by views) from answers;

# 2021-01-12 10:19:42.182179
+select percentile_disc(0.5) within group (order by views) * from answers;

# 2021-01-12 10:19:45.123695
+select percentile_disc(0.5) within group (order by views) from answers;

# 2021-01-12 10:19:59.774149
+select percentile_cont(0.5) within group (order by views) from answers;

# 2021-01-12 10:20:22.887882
+SELECT * FROM answers;

# 2021-01-12 10:22:02.613746
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator int, denominator int) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0
+        THEN
+            RETURN (numerator::float/denominator)*100;
+        ELSE
+            RETURN 0;
+        END IF;
+    END;
+$$ LANGUAGE plpgsql;
+

# 2021-01-12 10:22:09.875440
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-12 10:43:20.863642
+\d

# 2021-01-12 10:43:35.617091
+\dt

# 2021-01-12 13:03:55.973446
+CREATE MATERIALIZED VIEW autopilot_answers_statistics AS SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-12 13:04:02.731932
+SELECT * FROM autopilot_answers_statistics;

# 2021-01-12 14:44:56.912760
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-12 14:45:07.968732
+CREATE OR REPLACE FUNCTION calculate_percentage(numerator int, denominator int) RETURNS float AS $$
+    BEGIN
+        IF denominator != 0
+        THEN
+            RETURN (numerator::float/denominator)*100;
+        ELSE
+            RETURN 0;
+        END IF;
+    END;
+$$ LANGUAGE plpgsql;
+

# 2021-01-12 14:45:11.327688
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-12 14:45:18.875619
+SELECT DISTINCT(answer_id), topic_ids, SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-12 14:45:34.155308
+SELECT DISTINCT(answer_id), topic_ids, SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name, topic_ids ORDER BY total_views DESC;

# 2021-01-12 14:47:00.241600
+SELECT DISTINCT(answer_id), max(topic_ids), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-12 14:47:19.890359
+SELECT DISTINCT(answer_id), topic_ids, SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name, topic_ids ORDER BY total_views DESC;

# 2021-01-12 14:47:30.007574
+SELECT DISTINCT(answer_id), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-12 14:47:35.832539
+SELECT DISTINCT(answer_id), max(topic_ids), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-12 14:48:16.391367
+SELECT * FROM answers WHERE answer_id = 6517 ORDER BY timestamp DESC;

# 2021-01-12 14:48:29.739381
+SELECT DISTINCT(answer_id), max(topic_ids), SUM(views) AS total_views, SUM(accepts) AS total_accepts, SUM(resolve_count) AS total_resolve_count, SUM(handoffs) AS total_handoffs, calculate_percentage(SUM(accepts)::integer,SUM(views)::integer) AS accept_percentage, calculate_percentage(SUM(handoffs)::integer,SUM(views)::integer) AS handoff_percentage, SPLIT_PART(instance_name, '-', 1) AS account_name FROM answers GROUP BY answer_id, instance_name ORDER BY total_views DESC;

# 2021-01-18 15:40:11.001434
+SELECT * FROM qas WHERE deleted_at > '2021-01-14' AND label_method = 'autopilot_actions';

# 2021-01-18 15:40:42.195894
+SELECT knowledge_base_id FROM answers WHERE version_id IN (SELECT answer_version_id FROM qas WHERE deleted_at > '2021-01-14' AND label_method = 'autopilot_actions');

# 2021-01-18 15:40:50.072926
+SELECT knowledge_base_id FROM answers WHERE version_id IN (SELECT answer_version_id FROM qas WHERE deleted_at > '2021-01-14' AND label_method = 'autopilot_actions') ORDER BY knowledge_base_id;

# 2021-01-18 15:41:15.001033
+SELECT * FROM knowledge_bases WHERE id IN (1,2,6,10,12);

# 2021-01-21 16:12:48.217890
+SELECT * FROM sessions;

# 2021-01-21 16:13:31.917338
+SELECT count(*) FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01';

# 2021-01-21 16:13:52.126457
+SELECT count(*) FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';

# 2021-01-21 16:14:05.017775
+SELECT count(*) as sessions FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';

# 2021-01-21 16:14:17.187067
+SELECT count(*) as sessions, SUM(resolved) FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';

# 2021-01-21 16:16:00.163302
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved == TRUE THEN 1 ELSE 0 END) AS resolved
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';
+

# 2021-01-21 16:16:09.154065
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS resolved
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';
+

# 2021-01-21 16:18:06.506476
+\d+ sessions

# 2021-01-21 16:19:31.209980
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS resolved,
+       SUM(CASE WHEN handoff_channels == 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channels == 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channels == 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channels == 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';
+

# 2021-01-21 16:19:44.791507
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS resolved,
+       SUM(CASE WHEN handoff_channel == 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel == 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel == 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel == 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';
+

# 2021-01-21 16:19:54.575955
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS resolved,
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';
+

# 2021-01-21 16:22:03.125448
+\d+ events_per_topic

# 2021-01-21 16:23:02.611429
+\d+ sessions

# 2021-01-21 16:23:36.854023
+\d+ events_per_topic

# 2021-01-21 16:23:41.260430
+SELECT * FROM events_per_topic;

# 2021-01-21 16:26:20.772088
+SELECT topic_id,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';
+

# 2021-01-21 16:26:46.137744
+SELECT topic_id,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id;
+

# 2021-01-21 16:27:06.643039
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id, timestamp;
+

# 2021-01-21 16:27:30.726645
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id, timestamp ORDER BY timestamp ASC;
+

# 2021-01-21 16:28:14.297497
+SELECT * FROM events_per_topic WHERE topic_id = 1;

# 2021-01-21 16:29:03.894597
+SELECT * FROM events_per_topic WHERE topic_id = 201;

# 2021-01-21 16:29:10.028318
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id, timestamp ORDER BY timestamp ASC;
+

# 2021-01-21 16:29:17.690666
+SELECT * FROM events_per_topic WHERE topic_id = 203;

# 2021-01-21 16:29:52.075852
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id, timestamp ORDER BY timestamp ASC;
+

# 2021-01-21 16:30:55.520226
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' WHERE topic_id = 203 GROUP BY topic_id, timestamp ORDER BY timestamp ASC;

# 2021-01-21 16:31:06.118204
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' AND topic_id = 203 GROUP BY topic_id, timestamp ORDER BY timestamp ASC;

# 2021-01-21 16:31:33.675685
+SELECT * FROM events_per_topic WHERE topic_id = 203 AND timestamp = '2020-11-16';

# 2021-01-21 16:32:22.312528
+SELECT * FROM answers;

# 2021-01-21 16:33:12.651723
+SELECT answer_id,
+       timestamp,
+       SUM(views) AS views
+FROM answers WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY answer_id, timestamp ORDER BY timestamp ASC;
+

# 2021-01-21 16:33:45.510831
+SELECT answer_id,
+       SUM(views) AS views
+FROM answers WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY answer_id ORDER BY views DESC;
+

# 2021-01-21 16:34:00.829557
+SELECT answer_id,
+       SUM(views) AS views
+FROM answers WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY answer_id ORDER BY views DESC LIMIT 5;
+

# 2021-01-21 16:34:05.060288
+SELECT answer_id,
+       SUM(views) AS views
+FROM answers WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY answer_id ORDER BY views DESC;
+

# 2021-01-21 16:35:29.442244
+SELECT answer_id,
+       SUM(views) AS total_views,
+       SUM(resolve_count) AS total_resolve_count,
+       SUM(handoffs) AS total_handoffs,
+       calculate_percentage(SUM(handoffs)::integer, SUM(views)::integer) AS handoff_percentage,
+       calculate_percentage(SUM(resolve_count)::integer, SUM(views)::integer) AS resolve_percentage
+FROM answers WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY answer_id ORDER BY total_views DESC LIMIT 5;

# 2021-01-25 14:00:33.250490
+\d

# 2021-01-25 14:00:34.819969
+\d+

# 2021-01-25 14:00:41.788871
+\dt

# 2021-01-25 14:00:43.829918
+\dt+

# 2021-01-25 14:00:53.013267
+SELECT * FROM answers;

# 2021-01-25 14:04:48.705669
+\d

# 2021-01-25 14:11:57.529440
+SELECT * FROM answers;

# 2021-01-25 14:21:42.702215
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';
+

# 2021-01-25 14:21:57.698630
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id, timestamp ORDER BY timestamp ASC;
+

# 2021-01-25 14:22:12.266770
+SELECT answer_id,
+       SUM(views) AS total_views,
+       SUM(resolve_count) AS total_resolved,
+       SUM(handoffs) AS total_handoffs,
+       calculate_percentage(SUM(handoffs)::integer, SUM(views)::integer) AS handoff_percentage,
+       calculate_percentage(SUM(resolve_count)::integer, SUM(views)::integer) AS resolve_percentage
+FROM answers WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY answer_id ORDER BY total_views DESC LIMIT 5;
+

# 2021-01-25 14:22:19.731778
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';
+

# 2021-01-25 14:22:32.079335
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'dataloen-%';
+

# 2021-01-25 14:23:08.283182
+CREATE INDEX handoff_idx ON sessions(handoff_channel);

# 2021-01-25 14:23:10.746088
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'dataloen-%';
+

# 2021-01-25 14:23:39.191841
+CREATE INDEX resolve_idx ON sessions(resolved);

# 2021-01-25 14:23:41.159742
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'dataloen-%';
+

# 2021-01-25 14:23:59.835476
+EXPLAIN ANALYZE SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';

# 2021-01-25 14:24:51.003157
+CREATE INDEX instance_name_idx ON sessions(instance_name);

# 2021-01-25 14:24:53.613061
+EXPLAIN ANALYZE SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';

# 2021-01-25 14:25:02.222053
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';

# 2021-01-25 14:25:21.683794
+CREATE INDEX timestamp_idx ON sessions(timestamp);

# 2021-01-25 14:25:23.442730
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';

# 2021-01-25 14:38:54.036663
+SELECT * FROM copilot_answers;

# 2021-01-25 14:39:02.180357
+SELECT * FROM copilot_answers WHERE thumbs_ups != 0;

# 2021-01-25 14:39:33.894710
+SELECT SUM(thumbs_ups) FROM copilot_answers WHERE thumbs_ups != 0;

# 2021-01-25 14:40:37.861113
+SELECT SUM(thumbs_ups) FROM copilot_answers WHERE thumbs_ups != 0 AND team_id IS NULL;

# 2021-01-25 14:56:10.096924
+\d sessions

# 2021-01-25 14:59:02.891139
+CREATE INDEX sessions_indexes ON sessions(timestamp, instance_name, topic_ids, handoff_channel, resolved);

# 2021-01-25 14:59:06.168108
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';

# 2021-01-25 15:00:03.814005
+CREATE INDEX events_per_topic_idx ON events_per_topic(timestamp, instance_name, viewed_answers);

# 2021-01-25 15:00:09.103468
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id, timestamp ORDER BY timestamp ASC;
+

# 2021-01-25 15:00:42.191342
+CREATE INDEX events_per_topic_idx ON events_per_topic(timestamp, topic_id, instance_name, viewed_answers);

# 2021-01-25 15:00:49.389522
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id, timestamp ORDER BY timestamp ASC;
+

# 2021-01-25 15:02:55.681076
+CREATE INDEX answers_idx ON answers(timestamp, answer_id, instance_name, views, resolve_count, handoffs);

# 2021-01-25 15:03:03.691806
+SELECT answer_id,
+       SUM(views) AS total_views,
+       SUM(resolve_count) AS total_resolved,
+       SUM(handoffs) AS total_handoffs,
+       calculate_percentage(SUM(handoffs)::integer, SUM(views)::integer) AS handoff_percentage,
+       calculate_percentage(SUM(resolve_count)::integer, SUM(views)::integer) AS resolve_percentage
+FROM answers WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY answer_id ORDER BY total_views DESC LIMIT 5;

# 2021-01-25 15:03:14.591337
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';
+

# 2021-01-25 15:43:01.525047
+SELECT 
+       topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id, timestamp ORDER BY timestamp ASC;
+

# 2021-01-25 15:43:13.322228
+SELECT answer_id,
+       SUM(views) AS total_views,
+       SUM(resolve_count) AS total_resolved,
+       SUM(handoffs) AS total_handoffs,
+       calculate_percentage(SUM(handoffs)::integer, SUM(views)::integer) AS handoff_percentage,
+       calculate_percentage(SUM(resolve_count)::integer, SUM(views)::integer) AS resolve_percentage
+FROM answers WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY answer_id ORDER BY total_views DESC LIMIT 5;
+

# 2021-01-25 15:43:23.546459
+SELECT count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%';

# 2021-01-25 15:46:19.132052
+SELECT date_trunc('day', sessions.timestamp) "day", count(*) as total_sessions
+FROM sessions
+WHERE timestamp < %('2020-12-01')s AND timestamp > %('2020-11-01')s
+group by 1
+ORDER BY 1
+;

# 2021-01-25 15:46:36.024613
+SELECT date_trunc('day', sessions.timestamp) "day", count(*) as total_sessions
+FROM sessions
+WHERE timestamp < %(2020-12-01)s AND timestamp > %(2020-11-01)s
+group by 1
+ORDER BY 1;
+

# 2021-01-25 15:46:57.796343
+SELECT date_trunc('day', sessions.timestamp) "day", count(*) as total_sessions
+FROM sessions
+WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01'
+group by 1
+ORDER BY 1;
+

# 2021-01-25 15:48:46.154060
+SELECT date_trunc('day', timestamp) as timestamp_day,
+       count(*) as sessions, 
+       SUM(CASE WHEN resolved IS TRUE THEN 1 ELSE 0 END) AS total_resolved,
+       SUM(CASE WHEN handoff_channel IS NOT NULL THEN 1 ELSE 0 END) AS total_handoffs, 
+       SUM(CASE WHEN handoff_channel = 'phone' THEN 1 ELSE 0 END) AS handoff_phone, 
+       SUM(CASE WHEN handoff_channel = 'email' THEN 1 ELSE 0 END) AS handoff_email, 
+       SUM(CASE WHEN handoff_channel = 'iframe' THEN 1 ELSE 0 END) AS handoff_iframe, 
+       SUM(CASE WHEN handoff_channel = 'chat' THEN 1 ELSE 0 END) AS handoff_chat 
+FROM sessions WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY timestamp_day ORDER BY timestamp_day ASC;
+

# 2021-01-25 18:27:54.598957
+SELECT topic_id,
+       timestamp,
+       SUM(viewed_answers) AS views
+FROM events_per_topic WHERE timestamp < '2020-12-01' AND timestamp > '2020-11-01' AND instance_name LIKE 'coop-%' GROUP BY topic_id, timestamp ORDER BY timestamp ASC;

# 2021-01-26 15:07:17.460218
+SELECT * FROM knowledge_bases;

# 2021-01-28 11:38:42.599171
+SELECT * FROM short_form_question_count;

# 2021-01-28 11:38:54.107219
+SELECT * FROM short_form_question_count ORDER BY count DESC;

# 2021-01-28 11:39:11.773628
+SELECT * FROM qas WHERE answer_version_id = 90566;

# 2021-01-28 11:39:35.442459
+SELECT * FROM questions;

# 2021-01-28 11:39:45.242692
+SELECT * FROM questions WHERE version_id = 88604;

# 2021-01-28 11:40:13.127938
+SELECT * FROM question_log LIMIT 1;

# 2021-01-28 11:40:47.068096
+UPDATE question_log SET label = 'learned', question_id = 88480 WHERE id = 83395;

# 2021-01-28 11:40:48.872032
+SELECT * FROM question_log LIMIT 1;

# 2021-01-28 11:41:03.473902
+SELECT * FROM question_log WHERE id = 83395;

# 2021-01-28 11:41:35.210220
+SELECT * FROM qas WHERE question_version_id = 88604;

# 2021-01-28 11:42:06.157099
+SELECT answer_id FROM answers WHERE version_id IN (SELECT answer_version_id FROM qas WHERE question_version_id = 88604);

# 2021-01-28 18:27:54.962414
+REFRESH MATERIALIZED VIEW CONCURRENTLY autopilot_answer_statistics;

# 2021-01-28 18:28:00.655160
+REFRESH MATERIALIZED VIEW CONCURRENTLY copilot_conversation_statistics;

# 2021-01-29 14:04:57.249548
+REFRESH MATERIALIZED VIEW CONCURRENTLY autopilot_answer_statistics;

# 2021-01-29 14:05:01.884447
+REFRESH MATERIALIZED VIEW CONCURRENTLY copilot_conversation_statistics;

# 2021-02-01 10:12:17.540652
+SELECT count(*) FROM question_log WHERE answer_ids[1] = 1678;

# 2021-02-01 10:12:25.443595
+SELECT count(*) FROM question_log WHERE answer_ids[1] = 1678 AND viewed = TRUE;

# 2021-02-01 10:12:44.756833
+SELECT count(*) FROM question_log WHERE answer_ids[1] = 1678 AND viewed = TRUE AND timestamp > 2021-01-02;

# 2021-02-01 10:12:49.121888
+SELECT count(*) FROM question_log WHERE answer_ids[1] = 1678 AND viewed = TRUE AND timestamp > '2021-01-02';

# 2021-02-01 11:09:09.958092
+\d answers

# 2021-02-01 11:35:32.285520
+ALTER TABLE answers ALTER COLUMN handoffs DROP default;

# 2021-02-01 11:35:35.642105
+\d answers

# 2021-02-01 14:15:06.901161
+ALTER TABLE answers
+ALTER COLUMN views DEFAULT 0;

# 2021-02-01 14:15:14.853859
+ALTER TABLE answers
+ALTER COLUMN views default 0;

# 2021-02-01 14:15:20.162751
+ALTER TABLE answers
+ALTER COLUMN ALTER views default 0;

# 2021-02-01 14:15:27.048434
+\d answers

# 2021-02-01 14:15:36.962177
+ALTER TABLE answers
+ALTER COLUMN views default 0;

# 2021-02-01 14:15:48.803690
+ALTER TABLE answers
+ALTER COLUMN views not null default 0;

# 2021-02-01 14:15:59.130686
+ALTER TABLE answers
+ALTER COLUMN views 'default 0';

# 2021-02-01 14:16:22.977190
+ALTER TABLE answers
+ALTER COLUMN views set 'default 0';

# 2021-02-01 14:16:27.906610
+ALTER TABLE answers
+ALTER COLUMN views set default 0;

# 2021-02-01 16:33:58.756615
+SELECT * FROM answers WHERE instance_name = 'coop-autopilot-1';

# 2021-02-01 16:34:19.111348
+SELECT * FROM autopilot_answer_statistics WHERE answer_id = 82330;

# 2021-02-02 01:14:36.120093
+SELECT * FROM pg_stat_activity;

# 2021-02-02 01:15:43.803861
+SELECT * FROM pg_stat_activity WHERE client_port IS NOT NULL;

# 2021-02-02 01:41:28.725771
+SELECT * FROM pg_stat_activity;

# 2021-02-02 09:04:45.912198
+ls

# 2021-02-02 09:04:57.706504
+SELECT count(*) FROM answers;

# 2021-02-02 09:05:27.291533
+SELECT DISTINCT(answer_id) FROM answers;

# 2021-02-02 09:05:35.930321
+SELECT count(DISTINCT(answer_id)) FROM answers;

# 2021-02-02 09:35:39.516833
+\d answers

# 2021-02-02 09:49:31.817957
+SELECT count(*) FROM answers WHERE content LIKE '%iframe%';

# 2021-02-02 09:49:42.033945
+SELECT count(*) FROM answers WHERE content LIKE '%iframe%' AND deleted_at IS NULL;

# 2021-02-02 09:49:48.298210
+SELECT count(*) FROM answers WHERE content LIKE '%iframe%' AND deleted_at IS NULL AND latest = TRUE;

# 2021-02-02 09:49:58.186229
+SELECT count(*) FROM answers WHERE content LIKE '%iframe%' AND deleted_at IS NULL AND latest = TRUE AND type = 'long_form';

# 2021-02-02 09:50:06.674022
+SELECT answer_id, content FROM answers WHERE content LIKE '%iframe%' AND deleted_at IS NULL AND latest = TRUE AND type = 'long_form';

# 2021-02-02 09:50:34.483341
+\o hello.txt

# 2021-02-02 09:50:35.633160
+SELECT answer_id, content FROM answers WHERE content LIKE '%iframe%' AND deleted_at IS NULL AND latest = TRUE AND type = 'long_form';

# 2021-02-02 09:51:31.258400
+SELECT answer_id, content FROM answers WHERE content LIKE '%iframe%' AND deleted_at IS NULL AND latest = TRUE AND type = 'long_form' AND knowledge_base_id =7;

# 2021-02-02 09:51:45.910655
+\o hello2.txt

# 2021-02-02 09:51:47.133687
+SELECT answer_id, content FROM answers WHERE content LIKE '%iframe%' AND deleted_at IS NULL AND latest = TRUE AND type = 'long_form' AND knowledge_base_id =7;

# 2021-02-02 09:52:06.761118
+SELECT answer_id, content FROM answers WHERE content LIKE '%iframe%' AND deleted_at IS NULL AND latest = TRUE AND type = 'long_form';

# 2021-02-02 10:37:16.390742
+SELECT DISTINCT(answer_id) FROM answers

# 2021-02-02 10:45:25.907364
+SELECT * FROM answers WHERE answer_id = 82329;

# 2021-02-02 10:45:54.699862
+DELETE FROM answers WHERE answer_id = 82329;

# 2021-02-02 10:46:18.488052
+UPDATE answers SET deleted_at = NOW() WHERE answer_id = 82329;

# 2021-02-02 10:50:12.496509
+SELECT * FROM answers;

# 2021-02-02 10:50:27.064744
+SELECT * FROM answers WHERE views = 0 AND accepts = 0;

# 2021-02-03 15:20:38.952436
+\d

# 2021-02-04 11:21:53.123129
+\d+ users

# 2021-02-04 11:38:02.040773
+ALTER TABLE users ADD COLUMN referrer integer;

# 2021-02-04 11:38:05.333778
+\d+ users

# 2021-02-04 11:38:46.022998
+ALTER TABLE users ADD CONSTRAINT fk_user_referrer FOREIGN KEY (referrer) REFERENCES users (id);

# 2021-02-04 11:38:48.694226
+\d+ users

# 2021-02-05 11:43:14.991459
+SELECT DISTINCT ON(name) FROM events WHERE instance_name = 'economic-copilot-1';

# 2021-02-05 11:43:19.450709
+SELECT DISTINC(name) FROM events WHERE instance_name = 'economic-copilot-1';

# 2021-02-05 11:43:22.461347
+SELECT DISTINCT(name) FROM events WHERE instance_name = 'economic-copilot-1';

# 2021-02-05 11:43:51.858203
+SELECT DISTINCT(name), SUM() FROM events WHERE instance_name = 'economic-copilot-1';

# 2021-02-05 11:43:59.896451
+SELECT DISTINCT(name), count(*) FROM events WHERE instance_name = 'economic-copilot-1';

# 2021-02-05 11:44:06.514752
+SELECT DISTINCT(name), count(*) FROM events WHERE instance_name = 'economic-copilot-1' GROUP BY name;

# 2021-02-05 11:44:50.128492
+SELECT DISTINCT(name), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-02' AND timestamp < '2021-02-03' GROUP BY name;

# 2021-02-05 11:45:00.908594
+SELECT DISTINCT(name), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-03' AND timestamp < '2021-02-04' GROUP BY name;

# 2021-02-05 11:45:10.130460
+SELECT DISTINCT(name), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name;

# 2021-02-05 11:47:48.231079
+SELECT DISTINCT(name), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name, session;

# 2021-02-05 11:47:53.156703
+SELECT DISTINCT(name), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name, session_id;

# 2021-02-05 11:48:03.114313
+SELECT name, session, count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name, session_id;

# 2021-02-05 11:48:12.764657
+SELECT DISTINCT(name), session, count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name, session_id;

# 2021-02-05 11:48:22.016412
+SELECT DISTINCT(name,session), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name, session_id;

# 2021-02-05 11:48:27.973643
+SELECT DISTINCT(name,session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name, session_id;

# 2021-02-05 11:48:46.011875
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name, session_id;

# 2021-02-05 11:48:57.756973
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY session_id;

# 2021-02-05 11:49:03.973082
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY session_id ORDER BY count;

# 2021-02-05 11:49:07.787289
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 11:49:31.560018
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-03' AND timestamp < '2021-02-04' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 11:53:15.972523
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 11:53:32.947142
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-03' AND timestamp < '2021-02-04' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 11:53:56.581579
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-05' AND timestamp < '2021-02-06' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 11:54:36.610718
+SELECT * FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78';

# 2021-02-05 11:55:13.246153
+SELECT * FROM events WHERE session_id = '42b8459e-418a-48ab-8346-fd0ec13d2e0d';

# 2021-02-05 12:31:45.899793
+SELECT DISTINCT(name), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name, session_id;

# 2021-02-05 14:14:02.105366
+SELECT DISTINCT(name), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY name;

# 2021-02-05 14:14:13.201393
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-05' AND timestamp < '2021-02-06' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 14:14:35.576747
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 14:15:45.424398
+SELECT name, timestamp FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' LIMIT 1;

# 2021-02-05 14:15:54.167432
+\o output.txt

# 2021-02-05 14:16:06.237818
+SELECT name, timestamp FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' ORDER BY timestamp ASC LIMIT 30000;

# 2021-02-05 14:23:47.524538
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-05' AND timestamp < '2021-02-06' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 14:24:02.029281
+SELECT * FROM events WHERE session_id = '8fbf4abb-abe8-4d9d-8eba-5105806b0ab1';

# 2021-02-05 14:24:16.028226
+SELECT name, timestamp FROM events WHERE session_id = '8fbf4abb-abe8-4d9d-8eba-5105806b0ab1';

# 2021-02-05 14:24:25.722058
+SELECT name, timestamp FROM events WHERE session_id = '8fbf4abb-abe8-4d9d-8eba-5105806b0ab1' ORDER BY timestamp;

# 2021-02-05 14:25:32.966934
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-05' AND timestamp < '2021-02-06' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 14:27:37.643093
+DELETE FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' AND name = 'copilot.notification_shown';

# 2021-02-05 14:27:59.144469
+SELECT name, timestamp FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' ORDER BY timestamp;

# 2021-02-05 14:28:51.043470
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-05' AND timestamp < '2021-02-06' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 14:28:55.233222
+SELECT name, timestamp FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' ORDER BY timestamp;

# 2021-02-05 14:29:54.296194
+DELETE FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' AND name = 'copilot.answer_suggested' AND timestamp > '2021-02-04T19:33;

# 2021-02-05 14:29:56.716866
+DELETE FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' AND name = 'copilot.answer_suggested' AND timestamp > '2021-02-04T19:33';

# 2021-02-05 14:30:02.669351
+SELECT name, timestamp FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' ORDER BY timestamp;

# 2021-02-05 14:30:46.910065
+DELETE FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' AND name = 'copilot.suggestions_viewed' AND timestamp > '2021-02-04T19:32:39';

# 2021-02-05 14:30:52.653527
+DELETE FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' AND name = 'copilot.suggestions_viewed' AND timestamp > '2021-02-04T19:31:39';

# 2021-02-05 14:30:56.289136
+SELECT name, timestamp FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78' ORDER BY timestamp;

# 2021-02-05 14:31:24.517208
+DELETE FROM events WHERE session_id = '6c4192de-0c63-4be5-9a27-149a12cbea78';

# 2021-02-05 14:31:35.507062
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-05' AND timestamp < '2021-02-06' GROUP BY session_id ORDER BY count DESC;
+

# 2021-02-05 14:32:00.902814
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 14:32:44.751971
+SELECT count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05';

# 2021-02-05 14:32:58.652511
+SELECT count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' AND name = 'copilot.suggestions_viewed';

# 2021-02-05 14:33:11.090762
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 14:33:22.250144
+DELETE FROM events WHERE session_id = '1a901a6d-05ed-4659-bd19-4750ebb62ab7';

# 2021-02-05 14:33:26.579512
+SELECT count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' AND name = 'copilot.suggestions_viewed';

# 2021-02-05 14:33:36.604270
+SELECT DISTINCT(session_id), count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' GROUP BY session_id ORDER BY count DESC;

# 2021-02-05 14:33:51.919413
+DELETE FROM events WHERE session_id = '3dff32fb-05a4-48b1-9556-5bd50f548ddf';

# 2021-02-05 14:33:56.024143
+SELECT count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' AND name = 'copilot.suggestions_viewed';

# 2021-02-05 14:35:44.963029
+SELECT count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-04' AND timestamp < '2021-02-05' AND name = 'copilot.answer_viewed';

# 2021-02-05 14:35:53.057946
+SELECT count(*) FROM events WHERE instance_name = 'economic-copilot-1' AND timestamp > '2021-02-03' AND timestamp < '2021-02-04' AND name = 'copilot.answer_viewed';

# 2021-02-05 16:03:43.988683
+\d

# 2021-02-05 16:03:45.167465
+\d+
